{"sections":[],"abstract":[{"type":"text","text":"Gets various info about the bitmap including its "},{"code":"width","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"height","type":"codeVoice"},{"type":"text","text":" and raw pixel "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The data is 1 bit per pixel packed format, in MSB order; in other words, the high bit of the first byte"},{"text":" ","type":"text"},{"type":"text","text":"in data is the top left pixel of the image. If the bitmap has a mask, a pointer to its data is returned in "},{"type":"codeVoice","code":"mask"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"else nil is returned."}],"identifier":{"url":"doc:\/\/PlaydateKit\/documentation\/PlaydateKit\/Playdate\/Graphics\/Bitmap\/getData(mask:data:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/getdata(mask:data:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mask","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":">?>?, ","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":">?>?) -> (width"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"text":", height","kind":"text"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":", rowBytes","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PlaydateKit\/documentation\/PlaydateKit","doc:\/\/PlaydateKit\/documentation\/PlaydateKit\/Playdate\/Graphics","doc:\/\/PlaydateKit\/documentation\/PlaydateKit\/Playdate\/Graphics\/Bitmap"]]},"kind":"symbol","metadata":{"externalID":"s:11PlaydateKit0A0O8GraphicsO6BitmapC7getData4mask4datas5Int32V5width_AL6heightAL8rowBytestSpySpys5UInt8VGSgGSg_AUtF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mask","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">?>?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">?>?) -> (width"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":", height"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":", rowBytes","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":")"}],"modules":[{"name":"PlaydateKit"}],"title":"getData(mask:data:)","symbolKind":"method","roleHeading":"Instance Method","role":"symbol"},"references":{"doc://PlaydateKit/documentation/PlaydateKit/Playdate/Graphics":{"identifier":"doc:\/\/PlaydateKit\/documentation\/PlaydateKit\/Playdate\/Graphics","url":"\/documentation\/playdatekit\/playdate\/graphics","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graphics"}],"type":"topic","title":"Playdate.Graphics","abstract":[{"type":"text","text":"Functions related to displaying information on the device screen."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graphics"}]},"doc://PlaydateKit/documentation/PlaydateKit":{"images":[{"type":"icon","identifier":"Logo.png"}],"url":"\/documentation\/playdatekit","title":"PlaydateKit","identifier":"doc:\/\/PlaydateKit\/documentation\/PlaydateKit","type":"topic","abstract":[{"text":"Create games for Playdate using Swift.","type":"text"}],"kind":"symbol","role":"collection"},"doc://PlaydateKit/documentation/PlaydateKit/Playdate/Graphics/Bitmap":{"url":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bitmap"}],"title":"Playdate.Graphics.Bitmap","type":"topic","identifier":"doc:\/\/PlaydateKit\/documentation\/PlaydateKit\/Playdate\/Graphics\/Bitmap","navigatorTitle":[{"kind":"identifier","text":"Bitmap"}]},"doc://PlaydateKit/documentation/PlaydateKit/Playdate/Graphics/Bitmap/getData(mask:data:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getData"},{"text":"(","kind":"text"},{"text":"mask","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":">?>?, ","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":">?>?) -> (width","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"kind":"text","text":", height"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"text":", rowBytes","kind":"text"},{"text":": ","kind":"text"},{"text":"CInt","kind":"typeIdentifier","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":")"}],"identifier":"doc:\/\/PlaydateKit\/documentation\/PlaydateKit\/Playdate\/Graphics\/Bitmap\/getData(mask:data:)","type":"topic","title":"getData(mask:data:)","role":"symbol","abstract":[{"text":"Gets various info about the bitmap including its ","type":"text"},{"code":"width","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"height","type":"codeVoice"},{"text":" and raw pixel ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The data is 1 bit per pixel packed format, in MSB order; in other words, the high bit of the first byte","type":"text"},{"text":" ","type":"text"},{"text":"in data is the top left pixel of the image. If the bitmap has a mask, a pointer to its data is returned in ","type":"text"},{"type":"codeVoice","code":"mask"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"else nil is returned."}],"kind":"symbol","url":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/getdata(mask:data:)"},"Logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/PlaydateKit\/Logo.png"}],"alt":null,"identifier":"Logo.png","type":"image"}}}