{"includedArchiveIdentifiers":["PlaydateKit"],"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/downloading-prerequisites","title":"Downloading Prerequisites","type":"article"},{"path":"\/documentation\/playdatekit\/building-the-template","title":"Building the Template","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdategame\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/devicedidunlock()-1l3vt","title":"func deviceDidUnlock()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/devicedidunlock()-3b5ai","title":"func deviceDidUnlock()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/devicewilllock()-49mit","title":"func deviceWillLock()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/devicewilllock()-26xpv","title":"func deviceWillLock()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/devicewillsleep()-7hts3","title":"func deviceWillSleep()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/devicewillsleep()-1i4ad","title":"func deviceWillSleep()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/gamewillpause()-62mhi","title":"func gameWillPause()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/gamewillpause()-185zs","title":"func gameWillPause()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/gamewillresume()-7avob","title":"func gameWillResume()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/gamewillresume()-1er7i","title":"func gameWillResume()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/gamewillterminate()-9epf7","title":"func gameWillTerminate()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/gamewillterminate()-5qroh","title":"func gameWillTerminate()","type":"method"},{"path":"\/documentation\/playdatekit\/playdategame\/handle(_:)","title":"func handle(System.Event)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/update()-91u4m","title":"func update() -> Bool","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/update()-873r0","title":"func update() -> Bool","type":"method"}],"path":"\/documentation\/playdatekit\/playdategame","title":"PlaydateGame","type":"protocol"},{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/display\/flipped","title":"static var flipped: (x: Bool, y: Bool)","type":"property"},{"path":"\/documentation\/playdatekit\/display\/height","title":"static var height: CInt","type":"property"},{"path":"\/documentation\/playdatekit\/display\/inverted","title":"static var inverted: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/display\/refreshrate","title":"static var refreshRate: Float","type":"property"},{"path":"\/documentation\/playdatekit\/display\/scale","title":"static var scale: CUnsignedInt","type":"property"},{"path":"\/documentation\/playdatekit\/display\/width","title":"static var width: CInt","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/display\/setmosaic(x:y:)","title":"static func setMosaic(x: CUnsignedInt, y: CUnsignedInt)","type":"method"},{"path":"\/documentation\/playdatekit\/display\/setoffset(dx:dy:)","title":"static func setOffset(dx: CInt, dy: CInt)","type":"method"}],"path":"\/documentation\/playdatekit\/display","title":"Display","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/close()","title":"func close() throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/currentseekposition()","title":"func currentSeekPosition() throws(Playdate.Error) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/flush()","title":"func flush() throws(Playdate.Error) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/read(buffer:length:)","title":"func read(buffer: UnsafeMutableRawPointer, length: CUnsignedInt) throws(Playdate.Error) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek(to:seek:)","title":"func seek(to: CInt, seek: Seek) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/write(buffer:)","title":"func write(buffer: UnsafeRawBufferPointer) throws(Playdate.Error) -> CInt","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/beginning","title":"case beginning","type":"case"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/current","title":"case current","type":"case"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/end","title":"case end","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/init(rawvalue:)","title":"init?(rawValue: CInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/file\/filehandle\/seek\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/file\/filehandle\/seek","title":"File.FileHandle.Seek","type":"enum"}],"path":"\/documentation\/playdatekit\/file\/filehandle","title":"File.FileHandle","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/options","title":"File.Options","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/file\/listfiles(path:callback:userdata:showhidden:)-2bust","title":"static func listFiles(path: StaticString, callback: @convention(c) (_ filename: UnsafePointer<CChar>?, _ userdata: UnsafeMutableRawPointer?) -> Void, userdata: UnsafeMutableRawPointer?, showHidden: Bool) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/listfiles(path:callback:userdata:showhidden:)-35iwd","title":"static func listFiles(path: UnsafePointer<CChar>, callback: @convention(c) (_ filename: UnsafePointer<CChar>?, _ userdata: UnsafeMutableRawPointer?) -> Void, userdata: UnsafeMutableRawPointer?, showHidden: Bool) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/mkdir(path:)-57apz","title":"static func mkdir(path: StaticString) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/mkdir(path:)-8708r","title":"static func mkdir(path: UnsafePointer<CChar>) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/open(path:mode:)-23mv9","title":"static func open(path: UnsafePointer<CChar>, mode: Options) throws(Playdate.Error) -> FileHandle","type":"method"},{"path":"\/documentation\/playdatekit\/file\/open(path:mode:)-3j1cm","title":"static func open(path: StaticString, mode: Options) throws(Playdate.Error) -> FileHandle","type":"method"},{"path":"\/documentation\/playdatekit\/file\/rename(from:to:)-182qo","title":"static func rename(from: UnsafePointer<CChar>, to: UnsafePointer<CChar>) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/rename(from:to:)-6qhht","title":"static func rename(from: StaticString, to: StaticString) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/stat(path:)-18rzm","title":"static func stat(path: StaticString) throws(Playdate.Error) -> FileStat","type":"method"},{"path":"\/documentation\/playdatekit\/file\/stat(path:)-556zb","title":"static func stat(path: UnsafePointer<CChar>) throws(Playdate.Error) -> FileStat","type":"method"},{"path":"\/documentation\/playdatekit\/file\/unlink(path:recursive:)-4wwzp","title":"static func unlink(path: StaticString, recursive: Bool) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/file\/unlink(path:recursive:)-91wmx","title":"static func unlink(path: UnsafePointer<CChar>, recursive: Bool) throws(Playdate.Error)","type":"method"}],"path":"\/documentation\/playdatekit\/file","title":"File","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/init(path:)-48alc","title":"init(path: StaticString)","type":"init"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/init(path:)-4rrx1","title":"init(path: UnsafeMutablePointer<CChar>)","type":"init"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/init(width:height:bgcolor:)","title":"init(width: CInt, height: CInt, bgColor: Color)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/mask","title":"var mask: Bitmap?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/clear(bgcolor:)","title":"func clear(bgColor: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/copy()","title":"func copy() -> Bitmap","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/getdata(mask:data:)","title":"func getData(mask: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?, data: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?) -> (width: CInt, height: CInt, rowBytes: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/load(from:)-27xnc","title":"func load(from: UnsafeMutablePointer<CChar>) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/load(from:)-7dkkn","title":"func load(from: StaticString) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/rotated(by:xscale:yscale:)","title":"func rotated(by: Float, xScale: Float, yScale: Float) -> (bitmap: Bitmap, allocatedSize: CInt)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/drawmode","title":"Graphics.Bitmap.DrawMode","type":"typealias"},{"path":"\/documentation\/playdatekit\/graphics\/bitmap\/flip","title":"Graphics.Bitmap.Flip","type":"typealias"}],"path":"\/documentation\/playdatekit\/graphics\/bitmap","title":"Graphics.Bitmap","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/bitmaptable\/init(count:width:height:)","title":"init(count: CInt, width: CInt, height: CInt)","type":"init"},{"path":"\/documentation\/playdatekit\/graphics\/bitmaptable\/init(path:)-6uc6","title":"init(path: UnsafeMutablePointer<CChar>)","type":"init"},{"path":"\/documentation\/playdatekit\/graphics\/bitmaptable\/init(path:)-87b1i","title":"init(path: StaticString)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/bitmaptable\/bitmap(at:)","title":"func bitmap(at: CInt) -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmaptable\/load(from:)-2g3yg","title":"func load(from: StaticString) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/bitmaptable\/load(from:)-6dvl","title":"func load(from: UnsafeMutablePointer<CChar>) throws(Playdate.Error)","type":"method"}],"path":"\/documentation\/playdatekit\/graphics\/bitmaptable","title":"Graphics.BitmapTable","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/font\/glyph\/kerning(between:and:)","title":"func kerning(between: CUnsignedInt, and: CUnsignedInt) -> CInt","type":"method"}],"path":"\/documentation\/playdatekit\/graphics\/font\/glyph","title":"Graphics.Font.Glyph","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/font\/page\/glyph(for:)","title":"func glyph(for: CUnsignedInt) -> (pageGlyph: Glyph?, bitmap: Bitmap?, advance: CInt)","type":"method"}],"path":"\/documentation\/playdatekit\/graphics\/font\/page","title":"Graphics.Font.Page","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/font\/height","title":"var height: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/font\/getpage(for:)","title":"func getPage(for: CUnsignedInt) -> Page?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/font\/gettextwidth(for:length:encoding:tracking:)","title":"func getTextWidth(for: UnsafeRawPointer, length: Int, encoding: StringEncoding, tracking: CInt) -> CInt","type":"method"}],"path":"\/documentation\/playdatekit\/graphics\/font","title":"Graphics.Font","type":"class"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/linecapstyle","title":"Graphics.LineCapStyle","type":"typealias"},{"path":"\/documentation\/playdatekit\/graphics\/polygonfillrule","title":"Graphics.PolygonFillRule","type":"typealias"},{"path":"\/documentation\/playdatekit\/graphics\/solidcolor","title":"Graphics.SolidColor","type":"typealias"},{"path":"\/documentation\/playdatekit\/graphics\/stringencoding","title":"Graphics.StringEncoding","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/texttracking","title":"static var textTracking: CInt","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/checkmaskcollision(bitmap1:point1:flip1:bitmap2:point2:flip2:rect:)","title":"static func checkMaskCollision(bitmap1: Bitmap, point1: Point<CInt>, flip1: Bitmap.Flip, bitmap2: Bitmap, point2: Point<CInt>, flip2: Bitmap.Flip, rect: Rect<CInt>) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/clear(color:)","title":"static func clear(color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/clearcliprect()","title":"static func clearClipRect()","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/colorfrompattern(_:topleft:)","title":"static func colorFromPattern(Bitmap, topLeft: Point<CInt>) -> LCDColor","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/copyframebufferbitmap()","title":"static func copyFrameBufferBitmap() -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/display()","title":"static func display()","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawbitmap(_:at:degrees:center:xscale:yscale:)","title":"static func drawBitmap(Bitmap, at: Point<CInt>, degrees: Float, center: Point<Float>, xScale: Float, yScale: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawbitmap(_:at:flip:)","title":"static func drawBitmap(Bitmap, at: Point<CInt>, flip: Bitmap.Flip)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawbitmap(_:at:xscale:yscale:)","title":"static func drawBitmap(Bitmap, at: Point<CInt>, xScale: Float, yScale: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawellipse(in:linewidth:startangle:endangle:color:)","title":"static func drawEllipse(in: Rect<CInt>, lineWidth: CInt, startAngle: Float, endAngle: Float, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawline(_:linewidth:color:)","title":"static func drawLine(Line<CInt>, lineWidth: CInt, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawrect(_:color:)","title":"static func drawRect(Rect<CInt>, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/drawtext(_:length:encoding:at:)","title":"static func drawText(UnsafeRawPointer?, length: Int, encoding: StringEncoding, at: Point<CInt>) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/fillellipse(in:startangle:endangle:color:)","title":"static func fillEllipse(in: Rect<CInt>, startAngle: Float, endAngle: Float, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/fillpolygon(points:color:fillrule:)","title":"static func fillPolygon(points: [Point<CInt>], color: Color, fillRule: PolygonFillRule)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/fillrect(_:color:)","title":"static func fillRect(Rect<CInt>, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/filltriangle(p1:p2:p3:color:)","title":"static func fillTriangle(p1: Point<CInt>, p2: Point<CInt>, p3: Point<CInt>, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/getdebugbitmap()","title":"static func getDebugBitmap() -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/getdisplaybufferbitmap()","title":"static func getDisplayBufferBitmap() -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/getdisplayframe()","title":"static func getDisplayFrame() -> UnsafeMutablePointer<UInt8>?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/getframe()","title":"static func getFrame() -> UnsafeMutablePointer<UInt8>?","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/markupdatedrows(start:end:)","title":"static func markUpdatedRows(start: CInt, end: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/popcontext()","title":"static func popContext()","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/pushcontext(_:)","title":"static func pushContext(Bitmap?)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setbackgroundcolor(_:)","title":"static func setBackgroundColor(SolidColor)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setcliprect(_:)","title":"static func setClipRect(Rect<CInt>)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setdrawmode(_:)","title":"static func setDrawMode(Bitmap.DrawMode)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setdrawoffset(dx:dy:)","title":"static func setDrawOffset(dx: CInt, dy: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setfont(_:)","title":"static func setFont(Font)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setlinecapstyle(_:)","title":"static func setLineCapStyle(LineCapStyle)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setscreencliprect(_:)","title":"static func setScreenClipRect(Rect<CInt>)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setstencil(_:)","title":"static func setStencil(Bitmap?)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/setstencilimage(_:tile:)","title":"static func setStencilImage(Bitmap, tile: Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/settextleading(_:)","title":"static func setTextLeading(CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/tilebitmap(_:inside:flip:)","title":"static func tileBitmap(Bitmap, inside: Rect<CInt>, flip: Bitmap.Flip)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/color\/pattern(_:mask:)","title":"case pattern((UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8), mask: (UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8))","type":"case"},{"path":"\/documentation\/playdatekit\/graphics\/color\/solid(_:)","title":"case solid(SolidColor)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/color\/black","title":"static let black: Graphics.Color","type":"property"},{"path":"\/documentation\/playdatekit\/graphics\/color\/clear","title":"static let clear: Graphics.Color","type":"property"},{"path":"\/documentation\/playdatekit\/graphics\/color\/white","title":"static let white: Graphics.Color","type":"property"},{"path":"\/documentation\/playdatekit\/graphics\/color\/xor","title":"static let xor: Graphics.Color","type":"property"}],"path":"\/documentation\/playdatekit\/graphics\/color","title":"Graphics.Color","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/init(path:)-9u29g","title":"init(path: UnsafePointer<CChar>)","type":"init"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/init(path:)-kgp3","title":"init(path: StaticString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/context","title":"var context: Bitmap","type":"property"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/info","title":"var info: (width: CInt, height: CInt, frameRate: Float, frameCount: CInt, currentFrame: CInt)","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/renderframe(_:)","title":"func renderFrame(CInt) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/setcontext(_:)","title":"func setContext(Bitmap) throws(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/graphics\/video\/player\/usescreencontext()","title":"func useScreenContext()","type":"method"}],"path":"\/documentation\/playdatekit\/graphics\/video\/player","title":"Graphics.Video.Player","type":"class"}],"path":"\/documentation\/playdatekit\/graphics\/video","title":"Graphics.Video","type":"enum"}],"path":"\/documentation\/playdatekit\/graphics","title":"Graphics","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json\/decoder","title":"JSON.Decoder","type":"typealias"},{"path":"\/documentation\/playdatekit\/json\/encoder","title":"JSON.Encoder","type":"typealias"},{"path":"\/documentation\/playdatekit\/json\/reader","title":"JSON.Reader","type":"typealias"},{"path":"\/documentation\/playdatekit\/json\/value","title":"JSON.Value","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json\/decode(using:reader:value:)","title":"static func decode(using: inout Decoder, reader: Reader, value: inout Value) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/json\/decodestring(using:jsonstring:value:)-74vp9","title":"static func decodeString(using: inout Decoder, jsonString: StaticString, value: inout Value) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/json\/decodestring(using:jsonstring:value:)-oupe","title":"static func decodeString(using: inout Decoder, jsonString: UnsafeMutablePointer<CChar>, value: inout Value) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/json\/initencoder(encoder:writefunc:userdata:pretty:)","title":"static func initEncoder(encoder: inout Encoder, writeFunc: (@convention(c) (_ userdata: UnsafeMutableRawPointer?, _ string: UnsafePointer<CChar>?, _ length: CInt) -> Void)?, userdata: UnsafeMutableRawPointer?, pretty: Bool)","type":"method"}],"path":"\/documentation\/playdatekit\/json","title":"JSON","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/scoreboards\/boardslist","title":"Scoreboards.BoardsList","type":"typealias"},{"path":"\/documentation\/playdatekit\/scoreboards\/score","title":"Scoreboards.Score","type":"typealias"},{"path":"\/documentation\/playdatekit\/scoreboards\/scoreslist","title":"Scoreboards.ScoresList","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/scoreboards\/addscore(boardid:value:callback:)-1jt5x","title":"static func addScore(boardID: UnsafePointer<CChar>, value: CUnsignedInt, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/addscore(boardid:value:callback:)-2t58m","title":"static func addScore(boardID: StaticString, value: CUnsignedInt, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/freeboardslist(_:)","title":"static func freeBoardsList(UnsafeMutablePointer<BoardsList>)","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/freescore(_:)","title":"static func freeScore(UnsafeMutablePointer<Score>)","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/freescoreslist(_:)","title":"static func freeScoresList(UnsafeMutablePointer<ScoresList>)","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/getpersonalbest(boardid:callback:)-5qx0w","title":"static func getPersonalBest(boardID: StaticString, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/getpersonalbest(boardid:callback:)-76ejs","title":"static func getPersonalBest(boardID: UnsafePointer<CChar>, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/getscoreboards(callback:)","title":"static func getScoreboards(callback: @convention(c) (_ boards: UnsafeMutablePointer<BoardsList>?, _ errorMessage: UnsafePointer<CChar>?) -> Void) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/getscores(boardid:callback:)-2grh5","title":"static func getScores(boardID: UnsafePointer<CChar>, callback: @convention(c) (_ scores: UnsafeMutablePointer<ScoresList>?, _ errorMessage: UnsafePointer<CChar>?) -> Void) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/scoreboards\/getscores(boardid:callback:)-6pn7h","title":"static func getScores(boardID: StaticString, callback: @convention(c) (_ scores: UnsafeMutablePointer<ScoresList>?, _ errorMessage: UnsafePointer<CChar>?) -> Void) -> CInt","type":"method"}],"path":"\/documentation\/playdatekit\/scoreboards","title":"Scoreboards","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/collisioninfo\/actual","title":"let actual: Point<Float>","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/collisioninfo\/collisions","title":"let collisions: UnsafeBufferPointer<SpriteCollisionInfo>","type":"property"}],"path":"\/documentation\/playdatekit\/sprite\/collisioninfo","title":"Sprite.CollisionInfo","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/queryinfo\/info","title":"let info: UnsafeBufferPointer<SpriteQueryInfo>","type":"property"}],"path":"\/documentation\/playdatekit\/sprite\/queryinfo","title":"Sprite.QueryInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/bounds","title":"var bounds: Rect<Float>","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/center","title":"var center: Point<Float>","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/colliderect","title":"var collideRect: Rect<Float>?","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/collisionsenabled","title":"var collisionsEnabled: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/image","title":"var image: Graphics.Bitmap?","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/imageflip","title":"var imageFlip: Graphics.Bitmap.Flip","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/isvisible","title":"var isVisible: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/overlappingsprites","title":"var overlappingSprites: UnsafeBufferPointer<OpaquePointer?>","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/position","title":"var position: Point<Float>","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/tag","title":"var tag: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/updatesenabled","title":"var updatesEnabled: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/userdata","title":"var userdata: UnsafeMutableRawPointer?","type":"property"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/zindex","title":"var zIndex: Int16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/addtodisplaylist()","title":"func addToDisplayList()","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/checkcollisions(goalx:goaly:)","title":"func checkCollisions(goalX: Float, goalY: Float) -> CollisionInfo","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/copy()","title":"func copy() -> Sprite","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/markdirty()","title":"func markDirty()","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/moveby(dx:dy:)","title":"func moveBy(dx: Float, dy: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/moveto(_:)","title":"func moveTo(Point<Float>)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/movewithcollisions(goal:)","title":"func moveWithCollisions(goal: Point<Float>) -> CollisionInfo","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/removefromdisplaylist()","title":"func removeFromDisplayList()","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setcliprect(_:)","title":"func setClipRect(Rect<CInt>?)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setcollisionresponsefunction(function:)","title":"func setCollisionResponseFunction(function: (@convention(c) (_ sprite: OpaquePointer?, _ other: OpaquePointer?) -> CollisionResponseType)?)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setdrawfunction(drawfunction:)","title":"func setDrawFunction(drawFunction: (@convention(c) (_ sprite: OpaquePointer?, _ bounds: PDRect, _ drawRect: PDRect) -> Void)?)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setdrawmode(_:)","title":"func setDrawMode(Graphics.Bitmap.DrawMode)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setignoresdrawoffset(_:)","title":"func setIgnoresDrawOffset(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setimage(image:flip:)","title":"func setImage(image: Graphics.Bitmap, flip: Graphics.Bitmap.Flip)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setopaque(_:)","title":"func setOpaque(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setsize(width:height:)","title":"func setSize(width: Float, height: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setstencil(_:)","title":"func setStencil(Graphics.Bitmap?)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setstencilimage(_:tile:)","title":"func setStencilImage(Graphics.Bitmap, tile: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setstencilpattern(_:)","title":"func setStencilPattern(UnsafeMutablePointer<UInt8>)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/sprite\/setupdatefunction(_:)","title":"func setUpdateFunction((@convention(c) (_ sprite: OpaquePointer?) -> Void)?)","type":"method"}],"path":"\/documentation\/playdatekit\/sprite\/sprite","title":"Sprite.Sprite","type":"class"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/collisionresponsetype","title":"Sprite.CollisionResponseType","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/sprite\/adddirtyrect(_:)","title":"static func addDirtyRect(Rect<CInt>)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/alloverlappingsprites()","title":"static func allOverlappingSprites() -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/clearcliprectsinrange(startz:endz:)","title":"static func clearClipRectsInRange(startZ: CInt, endZ: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/drawdisplaylistsprites()","title":"static func drawDisplayListSprites()","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/getdisplaylistspritecount()","title":"static func getDisplayListSpriteCount() -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/queryspriteinfoalongline(_:)","title":"static func querySpriteInfoAlongLine(Line<Float>) -> QueryInfo","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/queryspritesalongline(_:)","title":"static func querySpritesAlongLine(Line<Float>) -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/queryspritesatpoint(_:)","title":"static func querySpritesAtPoint(Point<Float>) -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/queryspritesinrect(_:)","title":"static func querySpritesInRect(Rect<Float>) -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/removeallspritesfromdisplaylist()","title":"static func removeAllSpritesFromDisplayList()","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/removespritesfromdisplaylist(_:)","title":"static func removeSpritesFromDisplayList(UnsafeMutableBufferPointer<Sprite>)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/resetcollisionworld()","title":"static func resetCollisionWorld()","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/setalwaysredraw(_:)","title":"static func setAlwaysRedraw(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/setcliprectsinrange(cliprect:startz:endz:)","title":"static func setClipRectsInRange(clipRect: Rect<CInt>, startZ: CInt, endZ: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/sprite\/updateanddrawdisplaylistsprites()","title":"static func updateAndDrawDisplayListSprites()","type":"method"}],"path":"\/documentation\/playdatekit\/sprite","title":"Sprite","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/system\/menuitem\/title","title":"var title: UnsafePointer<CChar>","type":"property"},{"path":"\/documentation\/playdatekit\/system\/menuitem\/userdata","title":"var userdata: UnsafeMutableRawPointer?","type":"property"},{"path":"\/documentation\/playdatekit\/system\/menuitem\/value","title":"var value: CInt","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/system\/menuitem\/settitle(_:)","title":"func setTitle(StaticString)","type":"method"}],"path":"\/documentation\/playdatekit\/system\/menuitem","title":"System.MenuItem","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/system\/buttons","title":"System.Buttons","type":"typealias"},{"path":"\/documentation\/playdatekit\/system\/datetime","title":"System.DateTime","type":"typealias"},{"path":"\/documentation\/playdatekit\/system\/event","title":"System.Event","type":"typealias"},{"path":"\/documentation\/playdatekit\/system\/language-swift.typealias","title":"System.Language","type":"typealias"},{"path":"\/documentation\/playdatekit\/system\/peripherals","title":"System.Peripherals","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/system\/accelerometer","title":"static var accelerometer: (x: Float, y: Float, z: Float)","type":"property"},{"path":"\/documentation\/playdatekit\/system\/accelerometerisenabled","title":"static var accelerometerIsEnabled: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/system\/batterypercentage","title":"static var batteryPercentage: Float","type":"property"},{"path":"\/documentation\/playdatekit\/system\/batteryvoltage","title":"static var batteryVoltage: Float","type":"property"},{"path":"\/documentation\/playdatekit\/system\/buttonstate","title":"static var buttonState: (current: PDButtons, pushed: PDButtons, released: PDButtons)","type":"property"},{"path":"\/documentation\/playdatekit\/system\/crankangle","title":"static var crankAngle: Float","type":"property"},{"path":"\/documentation\/playdatekit\/system\/crankchange","title":"static var crankChange: Float","type":"property"},{"path":"\/documentation\/playdatekit\/system\/currenttimemilliseconds","title":"static var currentTimeMilliseconds: CUnsignedInt","type":"property"},{"path":"\/documentation\/playdatekit\/system\/elapsedtime","title":"static var elapsedTime: Float","type":"property"},{"path":"\/documentation\/playdatekit\/system\/flipped","title":"static var flipped: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/system\/iscrankdocked","title":"static var isCrankDocked: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/system\/language-swift.type.property","title":"static var language: Language","type":"property"},{"path":"\/documentation\/playdatekit\/system\/reduceflashing","title":"static var reduceFlashing: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/system\/shoulddisplay24hourtime","title":"static var shouldDisplay24HourTime: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/system\/timezoneoffset","title":"static var timezoneOffset: CInt","type":"property"},{"path":"\/documentation\/playdatekit\/system\/updatecallback","title":"static var updateCallback: (() -> Bool)?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/system\/addcheckmarkmenuitem(title:checked:callback:userdata:)-7difp","title":"static func addCheckmarkMenuItem(title: StaticString, checked: Bool, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/system\/addcheckmarkmenuitem(title:checked:callback:userdata:)-8zbz5","title":"static func addCheckmarkMenuItem(title: UnsafePointer<CChar>, checked: Bool, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/system\/addmenuitem(title:callback:userdata:)-2p6n5","title":"static func addMenuItem(title: StaticString, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/system\/addmenuitem(title:callback:userdata:)-9p07f","title":"static func addMenuItem(title: UnsafePointer<CChar>, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/system\/addoptionsmenuitem(title:options:callback:userdata:)-4odm8","title":"static func addOptionsMenuItem(title: UnsafePointer<CChar>, options: UnsafeMutableBufferPointer<UnsafePointer<CChar>?>, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userData: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/system\/addoptionsmenuitem(title:options:callback:userdata:)-4sn31","title":"static func addOptionsMenuItem(title: StaticString, options: [StaticString], callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userData: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/system\/clearicache()","title":"static func clearICache()","type":"method"},{"path":"\/documentation\/playdatekit\/system\/convertdatetimetoepoch(_:)","title":"static func convertDateTimeToEpoch(DateTime) -> CUnsignedInt","type":"method"},{"path":"\/documentation\/playdatekit\/system\/convertepochtodatetime(_:)","title":"static func convertEpochToDateTime(CUnsignedInt) -> DateTime","type":"method"},{"path":"\/documentation\/playdatekit\/system\/drawfps(at:)","title":"static func drawFPS(at: Point<CInt>)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/error(_:)-35an7","title":"static func error(Playdate.Error)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/error(_:)-505j","title":"static func error(UnsafePointer<CChar>?)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/error(_:)-8cti3","title":"static func error(StaticString)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/getsecondssinceepoch(milliseconds:)","title":"static func getSecondsSinceEpoch(milliseconds: UnsafeMutablePointer<CUnsignedInt>?) -> CUnsignedInt","type":"method"},{"path":"\/documentation\/playdatekit\/system\/log(_:)-8dh3f","title":"static func log(StaticString)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/log(_:)-t38s","title":"static func log(UnsafePointer<CChar>)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/realloc(pointer:size:)","title":"static func realloc(pointer: UnsafeMutableRawPointer?, size: Int) -> UnsafeMutableRawPointer","type":"method"},{"path":"\/documentation\/playdatekit\/system\/removeallmenuitems()","title":"static func removeAllMenuItems()","type":"method"},{"path":"\/documentation\/playdatekit\/system\/removemenuitem(_:)","title":"static func removeMenuItem(MenuItem)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/resetelapsedtime()","title":"static func resetElapsedTime()","type":"method"},{"path":"\/documentation\/playdatekit\/system\/setautolockdisabled(_:)","title":"static func setAutoLockDisabled(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/setbuttoncallback(callback:buttonuserdata:queuesize:)","title":"static func setButtonCallback(callback: ((_ button: Buttons, _ down: Bool, _ when: CUnsignedInt, _ userdata: UnsafeMutableRawPointer?) -> Bool)?, buttonUserdata: UnsafeMutableRawPointer?, queueSize: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/setcranksoundsdisabled(_:)","title":"static func setCrankSoundsDisabled(Bool) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/system\/setmenuimage(_:xoffset:)","title":"static func setMenuImage(Graphics.Bitmap, xOffset: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/system\/setserialmessagecallback(callback:)","title":"static func setSerialMessageCallback(callback: @convention(c) (_ message: UnsafePointer<CChar>?) -> Void)","type":"method"}],"path":"\/documentation\/playdatekit\/system","title":"System","type":"enum"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/line\/init(start:end:)","title":"init(start: Point<T>, end: Point<T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/line\/end","title":"var end: Point<T>","type":"property"},{"path":"\/documentation\/playdatekit\/line\/start","title":"var start: Point<T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/line\/offsetby(dx:dy:)","title":"func offsetBy(dx: T, dy: T) -> Line","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/line\/zero","title":"static var zero: Line<T>","type":"property"}],"path":"\/documentation\/playdatekit\/line","title":"Line","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/point\/init(x:y:)","title":"init(x: T, y: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/point\/x","title":"var x: T","type":"property"},{"path":"\/documentation\/playdatekit\/point\/y","title":"var y: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/point\/offsetby(dx:dy:)","title":"func offsetBy(dx: T, dy: T) -> Point","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/point\/zero","title":"static var zero: Point<T>","type":"property"}],"path":"\/documentation\/playdatekit\/point","title":"Point","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/rect\/init(origin:width:height:)","title":"init(origin: Point<T>, width: T, height: T)","type":"init"},{"path":"\/documentation\/playdatekit\/rect\/init(x:y:width:height:)","title":"init(x: T, y: T, width: T, height: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/rect\/height","title":"var height: T","type":"property"},{"path":"\/documentation\/playdatekit\/rect\/width","title":"var width: T","type":"property"},{"path":"\/documentation\/playdatekit\/rect\/x","title":"var x: T","type":"property"},{"path":"\/documentation\/playdatekit\/rect\/y","title":"var y: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/rect\/offsetby(dx:dy:)","title":"func offsetBy(dx: T, dy: T) -> Rect","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/rect\/zero","title":"static var zero: Rect<T>","type":"property"}],"path":"\/documentation\/playdatekit\/rect","title":"Rect","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/error","title":"Playdate.Error","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/playdateapi","title":"static var playdateAPI: PlaydateAPI!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/initialize(with:)","title":"static func initialize(with: UnsafeMutableRawPointer)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate","title":"Playdate","type":"enum"}],"icon":"Logo.png","path":"\/documentation\/playdatekit","title":"PlaydateKit","type":"module"}]},"references":{"Logo.png":{"alt":null,"identifier":"Logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Logo.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":2}}