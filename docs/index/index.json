{"includedArchiveIdentifiers":["PlaydateKit"],"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/downloading-prerequisites","title":"Downloading Prerequisites","type":"article"},{"path":"\/documentation\/playdatekit\/building-the-template","title":"Building the Template","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdategame\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/devicedidunlock()-1l3vt","title":"func deviceDidUnlock()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/devicedidunlock()-3b5ai","title":"func deviceDidUnlock()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/devicewilllock()-49mit","title":"func deviceWillLock()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/devicewilllock()-26xpv","title":"func deviceWillLock()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/devicewillsleep()-7hts3","title":"func deviceWillSleep()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/devicewillsleep()-1i4ad","title":"func deviceWillSleep()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/gamewillpause()-62mhi","title":"func gameWillPause()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/gamewillpause()-185zs","title":"func gameWillPause()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/gamewillresume()-7avob","title":"func gameWillResume()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/gamewillresume()-1er7i","title":"func gameWillResume()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/gamewillterminate()-9epf7","title":"func gameWillTerminate()","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/gamewillterminate()-5qroh","title":"func gameWillTerminate()","type":"method"},{"path":"\/documentation\/playdatekit\/playdategame\/handle(_:)","title":"func handle(Playdate.System.Event)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/playdatekit\/playdategame\/update()-91u4m","title":"func update() -> Bool","type":"method"}],"title":"PlaydateGame Implementations","type":"groupMarker"}],"path":"\/documentation\/playdatekit\/playdategame\/update()-873r0","title":"func update() -> Bool","type":"method"}],"path":"\/documentation\/playdatekit\/playdategame","title":"PlaydateGame","type":"protocol"},{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/display\/flipped","title":"static var flipped: (x: Bool, y: Bool)","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/display\/height","title":"static var height: CInt","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/display\/inverted","title":"static var inverted: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/display\/refreshrate","title":"static var refreshRate: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/display\/scale","title":"static var scale: CUnsignedInt","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/display\/width","title":"static var width: CInt","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/display\/setmosaic(x:y:)","title":"static func setMosaic(x: CUnsignedInt, y: CUnsignedInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/display\/setoffset(dx:dy:)","title":"static func setOffset(dx: CInt, dy: CInt)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/display","title":"Playdate.Display","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/close()","title":"func close() throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/currentseekposition()","title":"func currentSeekPosition() throws(Error) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/flush()","title":"func flush() throws(Error) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/read(buffer:length:)","title":"func read(buffer: UnsafeMutableRawPointer, length: CUnsignedInt) throws(Error) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek(to:seek:)","title":"func seek(to: CInt, seek: Seek) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/write(buffer:)","title":"func write(buffer: UnsafeRawBufferPointer) throws(Error) -> CInt","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/beginning","title":"case beginning","type":"case"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/current","title":"case current","type":"case"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/end","title":"case end","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/init(rawvalue:)","title":"init?(rawValue: CInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle\/seek","title":"Playdate.File.FileHandle.Seek","type":"enum"}],"path":"\/documentation\/playdatekit\/playdate\/file\/filehandle","title":"Playdate.File.FileHandle","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/options","title":"Playdate.File.Options","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/file\/listfiles(path:callback:userdata:showhidden:)-2w9lz","title":"static func listFiles(path: StaticString, callback: @convention(c) (_ filename: UnsafePointer<CChar>?, _ userdata: UnsafeMutableRawPointer?) -> Void, userdata: UnsafeMutableRawPointer?, showHidden: Bool) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/listfiles(path:callback:userdata:showhidden:)-59mk2","title":"static func listFiles(path: UnsafePointer<CChar>, callback: @convention(c) (_ filename: UnsafePointer<CChar>?, _ userdata: UnsafeMutableRawPointer?) -> Void, userdata: UnsafeMutableRawPointer?, showHidden: Bool) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/mkdir(path:)-4vzum","title":"static func mkdir(path: StaticString) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/mkdir(path:)-9rwpo","title":"static func mkdir(path: UnsafePointer<CChar>) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/open(path:mode:)-2yhbs","title":"static func open(path: UnsafePointer<CChar>, mode: Options) throws(Error) -> FileHandle","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/open(path:mode:)-8kp20","title":"static func open(path: StaticString, mode: Options) throws(Error) -> FileHandle","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/rename(from:to:)-3ff0y","title":"static func rename(from: StaticString, to: StaticString) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/rename(from:to:)-969yy","title":"static func rename(from: UnsafePointer<CChar>, to: UnsafePointer<CChar>) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/stat(path:)-6ac1z","title":"static func stat(path: StaticString) throws(Error) -> FileStat","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/stat(path:)-9vquc","title":"static func stat(path: UnsafePointer<CChar>) throws(Error) -> FileStat","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/unlink(path:recursive:)-4jt6t","title":"static func unlink(path: StaticString, recursive: Bool) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/file\/unlink(path:recursive:)-9dq44","title":"static func unlink(path: UnsafePointer<CChar>, recursive: Bool) throws(Error)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/file","title":"Playdate.File","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/init(path:)-6g89k","title":"init(path: StaticString)","type":"init"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/init(path:)-ylia","title":"init(path: UnsafeMutablePointer<CChar>)","type":"init"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/init(width:height:bgcolor:)","title":"init(width: CInt, height: CInt, bgColor: Color)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/mask","title":"var mask: Bitmap?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/clear(bgcolor:)","title":"func clear(bgColor: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/copy()","title":"func copy() -> Bitmap","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/getdata(mask:data:)","title":"func getData(mask: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?, data: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?) -> (width: CInt, height: CInt, rowBytes: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/load(from:)-39up6","title":"func load(from: UnsafeMutablePointer<CChar>) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/load(from:)-9wm1t","title":"func load(from: StaticString) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/rotated(by:xscale:yscale:)","title":"func rotated(by: Float, xScale: Float, yScale: Float) -> (bitmap: Bitmap, allocatedSize: CInt)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/drawmode","title":"Playdate.Graphics.Bitmap.DrawMode","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap\/flip","title":"Playdate.Graphics.Bitmap.Flip","type":"typealias"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmap","title":"Playdate.Graphics.Bitmap","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable\/init(count:width:height:)","title":"init(count: CInt, width: CInt, height: CInt)","type":"init"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable\/init(path:)-1lnj1","title":"init(path: UnsafeMutablePointer<CChar>)","type":"init"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable\/init(path:)-3rbwi","title":"init(path: StaticString)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable\/bitmap(at:)","title":"func bitmap(at: CInt) -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable\/load(from:)-2e5co","title":"func load(from: StaticString) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable\/load(from:)-9txdn","title":"func load(from: UnsafeMutablePointer<CChar>) throws(Error)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/bitmaptable","title":"Playdate.Graphics.BitmapTable","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/glyph\/kerning(between:and:)","title":"func kerning(between: CUnsignedInt, and: CUnsignedInt) -> CInt","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/glyph","title":"Playdate.Graphics.Font.Glyph","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/page\/glyph(for:)","title":"func glyph(for: CUnsignedInt) -> (pageGlyph: Glyph?, bitmap: Bitmap?, advance: CInt)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/page","title":"Playdate.Graphics.Font.Page","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/height","title":"var height: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/getpage(for:)","title":"func getPage(for: CUnsignedInt) -> Page?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/font\/gettextwidth(for:length:encoding:tracking:)","title":"func getTextWidth(for: UnsafeRawPointer, length: Int, encoding: StringEncoding, tracking: CInt) -> CInt","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/font","title":"Playdate.Graphics.Font","type":"class"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/linecapstyle","title":"Playdate.Graphics.LineCapStyle","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/polygonfillrule","title":"Playdate.Graphics.PolygonFillRule","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/rect","title":"Playdate.Graphics.Rect","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/solidcolor","title":"Playdate.Graphics.SolidColor","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/stringencoding","title":"Playdate.Graphics.StringEncoding","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/texttracking","title":"static var textTracking: CInt","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/checkmaskcollision(bitmap1:x1:y1:flip1:bitmap2:x2:y2:flip2:rect:)","title":"static func checkMaskCollision(bitmap1: Bitmap, x1: CInt, y1: CInt, flip1: Bitmap.Flip, bitmap2: Bitmap, x2: CInt, y2: CInt, flip2: Bitmap.Flip, rect: Rect) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/clear(color:)","title":"static func clear(color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/clearcliprect()","title":"static func clearClipRect()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/colorfrompattern(_:x:y:)","title":"static func colorFromPattern(Bitmap, x: CInt, y: CInt) -> LCDColor","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/copyframebufferbitmap()","title":"static func copyFrameBufferBitmap() -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/display()","title":"static func display()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawbitmap(_:x:y:degrees:centerx:centery:xscale:yscale:)","title":"static func drawBitmap(Bitmap, x: CInt, y: CInt, degrees: Float, centerX: Float, centerY: Float, xScale: Float, yScale: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawbitmap(_:x:y:flip:)","title":"static func drawBitmap(Bitmap, x: CInt, y: CInt, flip: Bitmap.Flip)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawbitmap(_:x:y:xscale:yscale:)","title":"static func drawBitmap(Bitmap, x: CInt, y: CInt, xScale: Float, yScale: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawellipse(x:y:width:height:linewidth:startangle:endangle:color:)","title":"static func drawEllipse(x: CInt, y: CInt, width: CInt, height: CInt, lineWidth: CInt, startAngle: Float, endAngle: Float, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawline(x1:y1:x2:y2:linewidth:color:)","title":"static func drawLine(x1: CInt, y1: CInt, x2: CInt, y2: CInt, lineWidth: CInt, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawrect(x:y:width:height:color:)","title":"static func drawRect(x: CInt, y: CInt, width: CInt, height: CInt, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/drawtext(_:length:encoding:x:y:)","title":"static func drawText(UnsafeRawPointer?, length: Int, encoding: StringEncoding, x: CInt, y: CInt) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/fillellipse(x:y:width:height:startangle:endangle:color:)","title":"static func fillEllipse(x: CInt, y: CInt, width: CInt, height: CInt, startAngle: Float, endAngle: Float, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/fillpolygon(points:color:fillrule:)","title":"static func fillPolygon(points: UnsafeMutableBufferPointer<CUnsignedInt>, color: Color, fillRule: PolygonFillRule)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/fillrect(x:y:width:height:color:)","title":"static func fillRect(x: CInt, y: CInt, width: CInt, height: CInt, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/filltriangle(x1:y1:x2:y2:x3:y3:color:)","title":"static func fillTriangle(x1: CInt, y1: CInt, x2: CInt, y2: CInt, x3: CInt, y3: CInt, color: Color)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/getdebugbitmap()","title":"static func getDebugBitmap() -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/getdisplaybufferbitmap()","title":"static func getDisplayBufferBitmap() -> Bitmap?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/getdisplayframe()","title":"static func getDisplayFrame() -> UnsafeMutablePointer<UInt8>?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/getframe()","title":"static func getFrame() -> UnsafeMutablePointer<UInt8>?","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/markupdatedrows(start:end:)","title":"static func markUpdatedRows(start: CInt, end: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/popcontext()","title":"static func popContext()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/pushcontext(_:)","title":"static func pushContext(Bitmap?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setbackgroundcolor(_:)","title":"static func setBackgroundColor(SolidColor)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setcliprect(x:y:width:height:)","title":"static func setClipRect(x: CInt, y: CInt, width: CInt, height: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setdrawmode(_:)","title":"static func setDrawMode(Bitmap.DrawMode)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setdrawoffset(dx:dy:)","title":"static func setDrawOffset(dx: CInt, dy: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setfont(_:)","title":"static func setFont(Font)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setlinecapstyle(_:)","title":"static func setLineCapStyle(LineCapStyle)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setscreencliprect(x:y:width:height:)","title":"static func setScreenClipRect(x: CInt, y: CInt, width: CInt, height: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setstencil(_:)","title":"static func setStencil(Bitmap?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/setstencilimage(_:tile:)","title":"static func setStencilImage(Bitmap, tile: Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/settextleading(_:)","title":"static func setTextLeading(CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/tilebitmap(_:x:y:width:height:flip:)","title":"static func tileBitmap(Bitmap, x: CInt, y: CInt, width: CInt, height: CInt, flip: Bitmap.Flip)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/color\/pattern(_:mask:)","title":"case pattern((UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8), mask: (UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8))","type":"case"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/color\/solid(_:)","title":"case solid(SolidColor)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/color\/black","title":"static let black: Playdate.Graphics.Color","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/color\/clear","title":"static let clear: Playdate.Graphics.Color","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/color\/white","title":"static let white: Playdate.Graphics.Color","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/color\/xor","title":"static let xor: Playdate.Graphics.Color","type":"property"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/color","title":"Playdate.Graphics.Color","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/init(path:)-672iw","title":"init(path: UnsafePointer<CChar>)","type":"init"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/init(path:)-9lw78","title":"init(path: StaticString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/context","title":"var context: Bitmap","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/info","title":"var info: (width: CInt, height: CInt, frameRate: Float, frameCount: CInt, currentFrame: CInt)","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/renderframe(_:)","title":"func renderFrame(CInt) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/setcontext(_:)","title":"func setContext(Bitmap) throws(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player\/usescreencontext()","title":"func useScreenContext()","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/video\/player","title":"Playdate.Graphics.Video.Player","type":"class"}],"path":"\/documentation\/playdatekit\/playdate\/graphics\/video","title":"Playdate.Graphics.Video","type":"enum"}],"path":"\/documentation\/playdatekit\/playdate\/graphics","title":"Playdate.Graphics","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/json\/decoder","title":"Playdate.JSON.Decoder","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/json\/encoder","title":"Playdate.JSON.Encoder","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/json\/reader","title":"Playdate.JSON.Reader","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/json\/value","title":"Playdate.JSON.Value","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/json\/decode(using:reader:value:)","title":"static func decode(using: inout Decoder, reader: Reader, value: inout Value) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/json\/decodestring(using:jsonstring:value:)-1uq5u","title":"static func decodeString(using: inout Decoder, jsonString: StaticString, value: inout Value) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/json\/decodestring(using:jsonstring:value:)-xwiz","title":"static func decodeString(using: inout Decoder, jsonString: UnsafeMutablePointer<CChar>, value: inout Value) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/json\/initencoder(encoder:writefunc:userdata:pretty:)","title":"static func initEncoder(encoder: inout Encoder, writeFunc: (@convention(c) (_ userdata: UnsafeMutableRawPointer?, _ string: UnsafePointer<CChar>?, _ length: CInt) -> Void)?, userdata: UnsafeMutableRawPointer?, pretty: Bool)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/json","title":"Playdate.JSON","type":"enum"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/boardslist","title":"Playdate.Scoreboards.BoardsList","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/score","title":"Playdate.Scoreboards.Score","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/scoreslist","title":"Playdate.Scoreboards.ScoresList","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/addscore(boardid:value:callback:)-29nc6","title":"static func addScore(boardID: StaticString, value: CUnsignedInt, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/addscore(boardid:value:callback:)-8xab3","title":"static func addScore(boardID: UnsafePointer<CChar>, value: CUnsignedInt, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/freeboardslist(_:)","title":"static func freeBoardsList(UnsafeMutablePointer<BoardsList>)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/freescore(_:)","title":"static func freeScore(UnsafeMutablePointer<Score>)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/freescoreslist(_:)","title":"static func freeScoresList(UnsafeMutablePointer<ScoresList>)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/getpersonalbest(boardid:callback:)-8h5m9","title":"static func getPersonalBest(boardID: UnsafePointer<CChar>, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/getpersonalbest(boardid:callback:)-a93b","title":"static func getPersonalBest(boardID: StaticString, callback: (@convention(c) (_ score: UnsafeMutablePointer<Score>?, _ errorMessage: UnsafePointer<CChar>?) -> Void)?) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/getscoreboards(callback:)","title":"static func getScoreboards(callback: @convention(c) (_ boards: UnsafeMutablePointer<BoardsList>?, _ errorMessage: UnsafePointer<CChar>?) -> Void) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/getscores(boardid:callback:)-8hnfz","title":"static func getScores(boardID: StaticString, callback: @convention(c) (_ scores: UnsafeMutablePointer<ScoresList>?, _ errorMessage: UnsafePointer<CChar>?) -> Void) -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/scoreboards\/getscores(boardid:callback:)-9heou","title":"static func getScores(boardID: UnsafePointer<CChar>, callback: @convention(c) (_ scores: UnsafeMutablePointer<ScoresList>?, _ errorMessage: UnsafePointer<CChar>?) -> Void) -> CInt","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/scoreboards","title":"Playdate.Scoreboards","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/collisioninfo\/actualx","title":"let actualX: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/collisioninfo\/actualy","title":"let actualY: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/collisioninfo\/collisions","title":"let collisions: UnsafeBufferPointer<SpriteCollisionInfo>","type":"property"}],"path":"\/documentation\/playdatekit\/playdate\/sprite\/collisioninfo","title":"Playdate.Sprite.CollisionInfo","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/queryinfo\/info","title":"let info: UnsafeBufferPointer<SpriteQueryInfo>","type":"property"}],"path":"\/documentation\/playdatekit\/playdate\/sprite\/queryinfo","title":"Playdate.Sprite.QueryInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/bounds","title":"var bounds: Rect","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/center","title":"var center: (x: Float, y: Float)","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/colliderect","title":"var collideRect: Rect?","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/collisionsenabled","title":"var collisionsEnabled: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/image","title":"var image: Graphics.Bitmap?","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/imageflip","title":"var imageFlip: Graphics.Bitmap.Flip","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/isvisible","title":"var isVisible: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/overlappingsprites","title":"var overlappingSprites: UnsafeBufferPointer<OpaquePointer?>","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/position","title":"var position: (x: Float, y: Float)","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/tag","title":"var tag: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/updatesenabled","title":"var updatesEnabled: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/userdata","title":"var userdata: UnsafeMutableRawPointer?","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/zindex","title":"var zIndex: Int16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/addtodisplaylist()","title":"func addToDisplayList()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/checkcollisions(goalx:goaly:)","title":"func checkCollisions(goalX: Float, goalY: Float) -> CollisionInfo","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/copy()","title":"func copy() -> Sprite","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/markdirty()","title":"func markDirty()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/moveby(dx:dy:)","title":"func moveBy(dx: Float, dy: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/moveto(x:y:)","title":"func moveTo(x: Float, y: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/movewithcollisions(goalx:goaly:)","title":"func moveWithCollisions(goalX: Float, goalY: Float) -> CollisionInfo","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/removefromdisplaylist()","title":"func removeFromDisplayList()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setcliprect(_:)","title":"func setClipRect(Graphics.Rect?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setcollisionresponsefunction(function:)","title":"func setCollisionResponseFunction(function: (@convention(c) (_ sprite: OpaquePointer?, _ other: OpaquePointer?) -> CollisionResponseType)?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setdrawfunction(drawfunction:)","title":"func setDrawFunction(drawFunction: (@convention(c) (_ sprite: OpaquePointer?, _ bounds: Rect, _ drawRect: Rect) -> Void)?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setdrawmode(_:)","title":"func setDrawMode(Graphics.Bitmap.DrawMode)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setignoresdrawoffset(_:)","title":"func setIgnoresDrawOffset(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setimage(image:flip:)","title":"func setImage(image: Graphics.Bitmap, flip: Graphics.Bitmap.Flip)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setopaque(_:)","title":"func setOpaque(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setsize(width:height:)","title":"func setSize(width: Float, height: Float)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setstencil(_:)","title":"func setStencil(Graphics.Bitmap?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setstencilimage(_:tile:)","title":"func setStencilImage(Graphics.Bitmap, tile: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setstencilpattern(_:)","title":"func setStencilPattern(UnsafeMutablePointer<UInt8>)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite\/setupdatefunction(_:)","title":"func setUpdateFunction((@convention(c) (_ sprite: OpaquePointer?) -> Void)?)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/sprite\/sprite","title":"Playdate.Sprite.Sprite","type":"class"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/collisionresponsetype","title":"Playdate.Sprite.CollisionResponseType","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/rect","title":"Playdate.Sprite.Rect","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/adddirtyrect(_:)","title":"static func addDirtyRect(Graphics.Rect)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/alloverlappingsprites()","title":"static func allOverlappingSprites() -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/clearcliprectsinrange(startz:endz:)","title":"static func clearClipRectsInRange(startZ: CInt, endZ: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/drawdisplaylistsprites()","title":"static func drawDisplayListSprites()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/getdisplaylistspritecount()","title":"static func getDisplayListSpriteCount() -> CInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/queryspriteinfoalongline(x1:y1:x2:y2:)","title":"static func querySpriteInfoAlongLine(x1: Float, y1: Float, x2: Float, y2: Float) -> QueryInfo","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/queryspritesalongline(x1:y1:x2:y2:)","title":"static func querySpritesAlongLine(x1: Float, y1: Float, x2: Float, y2: Float) -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/queryspritesatpoint(x:y:)","title":"static func querySpritesAtPoint(x: Float, y: Float) -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/queryspritesinrect(x:y:width:height:)","title":"static func querySpritesInRect(x: Float, y: Float, width: Float, height: Float) -> UnsafeBufferPointer<OpaquePointer?>","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/removeallspritesfromdisplaylist()","title":"static func removeAllSpritesFromDisplayList()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/removespritesfromdisplaylist(_:)","title":"static func removeSpritesFromDisplayList(UnsafeMutableBufferPointer<Sprite>)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/resetcollisionworld()","title":"static func resetCollisionWorld()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/setalwaysredraw(_:)","title":"static func setAlwaysRedraw(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/setcliprectsinrange(cliprect:startz:endz:)","title":"static func setClipRectsInRange(clipRect: Graphics.Rect, startZ: CInt, endZ: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/sprite\/updateanddrawdisplaylistsprites()","title":"static func updateAndDrawDisplayListSprites()","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/sprite","title":"Playdate.Sprite","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/system\/menuitem\/title","title":"var title: UnsafePointer<CChar>","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/menuitem\/userdata","title":"var userdata: UnsafeMutableRawPointer?","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/menuitem\/value","title":"var value: CInt","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/system\/menuitem\/settitle(_:)","title":"func setTitle(StaticString)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/system\/menuitem","title":"Playdate.System.MenuItem","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/system\/buttons","title":"Playdate.System.Buttons","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/system\/datetime","title":"Playdate.System.DateTime","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/system\/event","title":"Playdate.System.Event","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/system\/language-swift.typealias","title":"Playdate.System.Language","type":"typealias"},{"path":"\/documentation\/playdatekit\/playdate\/system\/peripherals","title":"Playdate.System.Peripherals","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/system\/accelerometer","title":"static var accelerometer: (x: Float, y: Float, z: Float)","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/accelerometerisenabled","title":"static var accelerometerIsEnabled: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/batterypercentage","title":"static var batteryPercentage: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/batteryvoltage","title":"static var batteryVoltage: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/buttonstate","title":"static var buttonState: (current: PDButtons, pushed: PDButtons, released: PDButtons)","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/crankangle","title":"static var crankAngle: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/crankchange","title":"static var crankChange: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/currenttimemilliseconds","title":"static var currentTimeMilliseconds: CUnsignedInt","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/elapsedtime","title":"static var elapsedTime: Float","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/flipped","title":"static var flipped: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/iscrankdocked","title":"static var isCrankDocked: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/language-swift.type.property","title":"static var language: Language","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/reduceflashing","title":"static var reduceFlashing: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/shoulddisplay24hourtime","title":"static var shouldDisplay24HourTime: Bool","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/timezoneoffset","title":"static var timezoneOffset: CInt","type":"property"},{"path":"\/documentation\/playdatekit\/playdate\/system\/updatecallback","title":"static var updateCallback: (() -> Bool)?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/system\/addcheckmarkmenuitem(title:checked:callback:userdata:)-1zw7w","title":"static func addCheckmarkMenuItem(title: StaticString, checked: Bool, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/addcheckmarkmenuitem(title:checked:callback:userdata:)-8ift","title":"static func addCheckmarkMenuItem(title: UnsafePointer<CChar>, checked: Bool, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/addmenuitem(title:callback:userdata:)-1bfwq","title":"static func addMenuItem(title: StaticString, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/addmenuitem(title:callback:userdata:)-47a4f","title":"static func addMenuItem(title: UnsafePointer<CChar>, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userdata: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/addoptionsmenuitem(title:options:callback:userdata:)-1ohgi","title":"static func addOptionsMenuItem(title: StaticString, options: [StaticString], callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userData: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/addoptionsmenuitem(title:options:callback:userdata:)-51mvf","title":"static func addOptionsMenuItem(title: UnsafePointer<CChar>, options: UnsafeMutableBufferPointer<UnsafePointer<CChar>?>, callback: (@convention(c) (_ userdata: UnsafeMutableRawPointer?) -> Void)?, userData: UnsafeMutableRawPointer?) -> MenuItem","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/clearicache()","title":"static func clearICache()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/convertdatetimetoepoch(_:)","title":"static func convertDateTimeToEpoch(DateTime) -> CUnsignedInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/convertepochtodatetime(_:)","title":"static func convertEpochToDateTime(CUnsignedInt) -> DateTime","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/drawfps(x:y:)","title":"static func drawFPS(x: CInt, y: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/error(_:)-1qzf1","title":"static func error(StaticString)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/error(_:)-376ql","title":"static func error(Error)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/error(_:)-7ut9u","title":"static func error(UnsafePointer<CChar>?)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/getsecondssinceepoch(_:)","title":"static func getSecondsSinceEpoch(CUnsignedInt) -> CUnsignedInt","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/log(_:)-4t2fc","title":"static func log(UnsafePointer<CChar>)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/log(_:)-4z6ae","title":"static func log(StaticString)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/realloc(pointer:size:)","title":"static func realloc(pointer: UnsafeMutableRawPointer?, size: Int) -> UnsafeMutableRawPointer","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/removeallmenuitems()","title":"static func removeAllMenuItems()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/removemenuitem(_:)","title":"static func removeMenuItem(MenuItem)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/resetelapsedtime()","title":"static func resetElapsedTime()","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/setautolockdisabled(_:)","title":"static func setAutoLockDisabled(Bool)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/setbuttoncallback(callback:buttonuserdata:queuesize:)","title":"static func setButtonCallback(callback: ((_ button: Buttons, _ down: Bool, _ when: CUnsignedInt, _ userdata: UnsafeMutableRawPointer?) -> Bool)?, buttonUserdata: UnsafeMutableRawPointer?, queueSize: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/setcranksoundsdisabled(_:)","title":"static func setCrankSoundsDisabled(Bool) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/setmenuimage(_:xoffset:)","title":"static func setMenuImage(Graphics.Bitmap, xOffset: CInt)","type":"method"},{"path":"\/documentation\/playdatekit\/playdate\/system\/setserialmessagecallback(callback:)","title":"static func setSerialMessageCallback(callback: @convention(c) (_ message: UnsafePointer<CChar>?) -> Void)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate\/system","title":"Playdate.System","type":"enum"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/collisionpoint\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/collisionpoint\/init(x:y:)","title":"init(x: Float, y: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/collisionpoint\/x","title":"var x: Float","type":"property"},{"path":"\/documentation\/playdatekit\/collisionpoint\/y","title":"var y: Float","type":"property"}],"path":"\/documentation\/playdatekit\/collisionpoint","title":"CollisionPoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/collisionvector\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/collisionvector\/init(x:y:)","title":"init(x: Int32, y: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/collisionvector\/x","title":"var x: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/collisionvector\/y","title":"var y: Int32","type":"property"}],"path":"\/documentation\/playdatekit\/collisionvector","title":"CollisionVector","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/filestat\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/filestat\/init(isdir:size:m_year:m_month:m_day:m_hour:m_minute:m_second:)","title":"init(isdir: Int32, size: UInt32, m_year: Int32, m_month: Int32, m_day: Int32, m_hour: Int32, m_minute: Int32, m_second: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/filestat\/isdir","title":"var isdir: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/m_day","title":"var m_day: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/m_hour","title":"var m_hour: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/m_minute","title":"var m_minute: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/m_month","title":"var m_month: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/m_second","title":"var m_second: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/m_year","title":"var m_year: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/filestat\/size","title":"var size: UInt32","type":"property"}],"path":"\/documentation\/playdatekit\/filestat","title":"FileStat","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdrect\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/lcdrect\/init(left:right:top:bottom:)","title":"init(left: Int32, right: Int32, top: Int32, bottom: Int32)","type":"init"},{"path":"\/documentation\/playdatekit\/lcdrect\/init(x:y:width:height:)","title":"init(x: CInt, y: CInt, width: CInt, height: CInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdrect\/bottom","title":"var bottom: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/lcdrect\/left","title":"var left: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/lcdrect\/right","title":"var right: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/lcdrect\/top","title":"var top: Int32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdrect\/translated(dx:dy:)","title":"func translated(dx: CInt, dy: CInt) -> Playdate.Graphics.Rect","type":"method"}],"path":"\/documentation\/playdatekit\/lcdrect","title":"LCDRect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdboard\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/pdboard\/init(boardid:name:)","title":"init(boardID: UnsafeMutablePointer<CChar>!, name: UnsafeMutablePointer<CChar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdboard\/boardid","title":"var boardID: UnsafeMutablePointer<CChar>!","type":"property"},{"path":"\/documentation\/playdatekit\/pdboard\/name","title":"var name: UnsafeMutablePointer<CChar>!","type":"property"}],"path":"\/documentation\/playdatekit\/pdboard","title":"PDBoard","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdboardslist\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/pdboardslist\/init(count:lastupdated:boards:)","title":"init(count: UInt32, lastUpdated: UInt32, boards: UnsafeMutablePointer<PDBoard>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdboardslist\/boards","title":"var boards: UnsafeMutablePointer<PDBoard>!","type":"property"},{"path":"\/documentation\/playdatekit\/pdboardslist\/count","title":"var count: UInt32","type":"property"},{"path":"\/documentation\/playdatekit\/pdboardslist\/lastupdated","title":"var lastUpdated: UInt32","type":"property"}],"path":"\/documentation\/playdatekit\/pdboardslist","title":"PDBoardsList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/a","title":"static var a: PDButtons","type":"property"},{"path":"\/documentation\/playdatekit\/pdbuttons\/b","title":"static var b: PDButtons","type":"property"},{"path":"\/documentation\/playdatekit\/pdbuttons\/down","title":"static var down: PDButtons","type":"property"},{"path":"\/documentation\/playdatekit\/pdbuttons\/left","title":"static var left: PDButtons","type":"property"},{"path":"\/documentation\/playdatekit\/pdbuttons\/right","title":"static var right: PDButtons","type":"property"},{"path":"\/documentation\/playdatekit\/pdbuttons\/up","title":"static var up: PDButtons","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/pdbuttons\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/playdatekit\/pdbuttons\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/playdatekit\/pdbuttons\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdbuttons\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdbuttons\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/playdatekit\/pdbuttons\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/pdbuttons","title":"PDButtons","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pddatetime\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/pddatetime\/init(year:month:day:weekday:hour:minute:second:)","title":"init(year: UInt16, month: UInt8, day: UInt8, weekday: UInt8, hour: UInt8, minute: UInt8, second: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pddatetime\/day","title":"var day: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/pddatetime\/hour","title":"var hour: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/pddatetime\/minute","title":"var minute: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/pddatetime\/month","title":"var month: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/pddatetime\/second","title":"var second: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/pddatetime\/weekday","title":"var weekday: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/pddatetime\/year","title":"var year: UInt16","type":"property"}],"path":"\/documentation\/playdatekit\/pddatetime","title":"PDDateTime","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/accelerometer","title":"static var accelerometer: PDPeripherals","type":"property"},{"path":"\/documentation\/playdatekit\/pdperipherals\/allperipherals","title":"static var allPeripherals: PDPeripherals","type":"property"},{"path":"\/documentation\/playdatekit\/pdperipherals\/none","title":"static var none: PDPeripherals","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/pdperipherals\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/playdatekit\/pdperipherals\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/playdatekit\/pdperipherals\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdperipherals\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/playdatekit\/pdperipherals\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/playdatekit\/pdperipherals\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/pdperipherals","title":"PDPeripherals","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdrect\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/pdrect\/init(x:y:width:height:)","title":"init(x: Float, y: Float, width: Float, height: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdrect\/height","title":"var height: Float","type":"property"},{"path":"\/documentation\/playdatekit\/pdrect\/width","title":"var width: Float","type":"property"},{"path":"\/documentation\/playdatekit\/pdrect\/x","title":"var x: Float","type":"property"},{"path":"\/documentation\/playdatekit\/pdrect\/y","title":"var y: Float","type":"property"}],"path":"\/documentation\/playdatekit\/pdrect","title":"PDRect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdscore\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/pdscore\/init(rank:value:player:)","title":"init(rank: UInt32, value: UInt32, player: UnsafeMutablePointer<CChar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdscore\/player","title":"var player: UnsafeMutablePointer<CChar>!","type":"property"},{"path":"\/documentation\/playdatekit\/pdscore\/rank","title":"var rank: UInt32","type":"property"},{"path":"\/documentation\/playdatekit\/pdscore\/value","title":"var value: UInt32","type":"property"}],"path":"\/documentation\/playdatekit\/pdscore","title":"PDScore","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/init(boardid:count:lastupdated:playerincluded:limit:scores:)","title":"init(boardID: UnsafeMutablePointer<CChar>!, count: UInt32, lastUpdated: UInt32, playerIncluded: Int32, limit: UInt32, scores: UnsafeMutablePointer<PDScore>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/boardid","title":"var boardID: UnsafeMutablePointer<CChar>!","type":"property"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/count","title":"var count: UInt32","type":"property"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/lastupdated","title":"var lastUpdated: UInt32","type":"property"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/limit","title":"var limit: UInt32","type":"property"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/playerincluded","title":"var playerIncluded: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/pdscoreslist\/scores","title":"var scores: UnsafeMutablePointer<PDScore>!","type":"property"}],"path":"\/documentation\/playdatekit\/pdscoreslist","title":"PDScoresList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdateapi\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdateapi\/init(system:file:graphics:sprite:display:sound:lua:json:scoreboards:)","title":"init(system: UnsafePointer<playdate_sys>!, file: UnsafePointer<playdate_file>!, graphics: UnsafePointer<playdate_graphics>!, sprite: UnsafePointer<playdate_sprite>!, display: UnsafePointer<playdate_display>!, sound: UnsafePointer<playdate_sound>!, lua: UnsafePointer<playdate_lua>!, json: UnsafePointer<playdate_json>!, scoreboards: UnsafePointer<playdate_scoreboards>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdateapi\/display","title":"var display: UnsafePointer<playdate_display>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/file","title":"var file: UnsafePointer<playdate_file>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/graphics","title":"var graphics: UnsafePointer<playdate_graphics>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/json","title":"var json: UnsafePointer<playdate_json>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/lua","title":"var lua: UnsafePointer<playdate_lua>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/scoreboards","title":"var scoreboards: UnsafePointer<playdate_scoreboards>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/sound","title":"var sound: UnsafePointer<playdate_sound>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/sprite","title":"var sprite: UnsafePointer<playdate_sprite>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdateapi\/system","title":"var system: UnsafePointer<playdate_sys>!","type":"property"}],"path":"\/documentation\/playdatekit\/playdateapi","title":"PlaydateAPI","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/init(sprite:other:responsetype:overlaps:ti:move:normal:touch:spriterect:otherrect:)","title":"init(sprite: OpaquePointer!, other: OpaquePointer!, responseType: SpriteCollisionResponseType, overlaps: UInt8, ti: Float, move: CollisionPoint, normal: CollisionVector, touch: CollisionPoint, spriteRect: PDRect, otherRect: PDRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/move","title":"var move: CollisionPoint","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/normal","title":"var normal: CollisionVector","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/other","title":"var other: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/otherrect","title":"var otherRect: PDRect","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/overlaps","title":"var overlaps: UInt8","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/responsetype","title":"var responseType: SpriteCollisionResponseType","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/sprite","title":"var sprite: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/spriterect","title":"var spriteRect: PDRect","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/ti","title":"var ti: Float","type":"property"},{"path":"\/documentation\/playdatekit\/spritecollisioninfo\/touch","title":"var touch: CollisionPoint","type":"property"}],"path":"\/documentation\/playdatekit\/spritecollisioninfo","title":"SpriteCollisionInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/init(sprite:ti1:ti2:entrypoint:exitpoint:)","title":"init(sprite: OpaquePointer!, ti1: Float, ti2: Float, entryPoint: CollisionPoint, exitPoint: CollisionPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/entrypoint","title":"var entryPoint: CollisionPoint","type":"property"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/exitpoint","title":"var exitPoint: CollisionPoint","type":"property"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/sprite","title":"var sprite: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/ti1","title":"var ti1: Float","type":"property"},{"path":"\/documentation\/playdatekit\/spritequeryinfo\/ti2","title":"var ti2: Float","type":"property"}],"path":"\/documentation\/playdatekit\/spritequeryinfo","title":"SpriteQueryInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/div_t\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/div_t\/init(quot:rem:)","title":"init(quot: Int32, rem: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/div_t\/quot","title":"var quot: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/div_t\/rem","title":"var rem: Int32","type":"property"}],"path":"\/documentation\/playdatekit\/div_t","title":"div_t","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/exception\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/exception\/init(type:name:arg1:arg2:retval:err:)","title":"init(type: Int32, name: UnsafeMutablePointer<CChar>!, arg1: Double, arg2: Double, retval: Double, err: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/exception\/arg1","title":"var arg1: Double","type":"property"},{"path":"\/documentation\/playdatekit\/exception\/arg2","title":"var arg2: Double","type":"property"},{"path":"\/documentation\/playdatekit\/exception\/err","title":"var err: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/exception\/name","title":"var name: UnsafeMutablePointer<CChar>!","type":"property"},{"path":"\/documentation\/playdatekit\/exception\/retval","title":"var retval: Double","type":"property"},{"path":"\/documentation\/playdatekit\/exception\/type","title":"var type: Int32","type":"property"}],"path":"\/documentation\/playdatekit\/exception","title":"exception","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_decoder\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/json_decoder\/init(decodeerror:willdecodesublist:shoulddecodetablevalueforkey:diddecodetablevalue:shoulddecodearrayvalueatindex:diddecodearrayvalue:diddecodesublist:userdata:returnstring:path:)","title":"init(decodeError: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, Int32) -> Void)!, willDecodeSublist: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> Void)!, shouldDecodeTableValueForKey: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?) -> Int32)!, didDecodeTableValue: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value) -> Void)!, shouldDecodeArrayValueAtIndex: ((UnsafeMutablePointer<json_decoder>?, Int32) -> Int32)!, didDecodeArrayValue: ((UnsafeMutablePointer<json_decoder>?, Int32, json_value) -> Void)!, didDecodeSublist: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> UnsafeMutableRawPointer?)!, userdata: UnsafeMutableRawPointer!, returnString: Int32, path: UnsafePointer<CChar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_decoder\/decodeerror","title":"var decodeError: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/diddecodearrayvalue","title":"var didDecodeArrayValue: ((UnsafeMutablePointer<json_decoder>?, Int32, json_value) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/diddecodesublist","title":"var didDecodeSublist: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/diddecodetablevalue","title":"var didDecodeTableValue: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/path","title":"var path: UnsafePointer<CChar>!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/returnstring","title":"var returnString: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/shoulddecodearrayvalueatindex","title":"var shouldDecodeArrayValueAtIndex: ((UnsafeMutablePointer<json_decoder>?, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/shoulddecodetablevalueforkey","title":"var shouldDecodeTableValueForKey: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/userdata","title":"var userdata: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/playdatekit\/json_decoder\/willdecodesublist","title":"var willDecodeSublist: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/json_decoder","title":"json_decoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_encoder\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/json_encoder\/init(writestringfunc:userdata:pretty:startedtable:startedarray:depth:startarray:addarraymember:endarray:starttable:addtablemember:endtable:writenull:writefalse:writetrue:writeint:writedouble:writestring:)","title":"init(writeStringFunc: ((UnsafeMutableRawPointer?, UnsafePointer<CChar>?, Int32) -> Void)!, userdata: UnsafeMutableRawPointer!, pretty: Int32, startedTable: Int32, startedArray: Int32, depth: Int32, startArray: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, addArrayMember: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, endArray: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, startTable: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, addTableMember: ((UnsafeMutablePointer<json_encoder>?, UnsafePointer<CChar>?, Int32) -> Void)!, endTable: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, writeNull: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, writeFalse: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, writeTrue: ((UnsafeMutablePointer<json_encoder>?) -> Void)!, writeInt: ((UnsafeMutablePointer<json_encoder>?, Int32) -> Void)!, writeDouble: ((UnsafeMutablePointer<json_encoder>?, Double) -> Void)!, writeString: ((UnsafeMutablePointer<json_encoder>?, UnsafePointer<CChar>?, Int32) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_encoder\/addarraymember","title":"var addArrayMember: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/addtablemember","title":"var addTableMember: ((UnsafeMutablePointer<json_encoder>?, UnsafePointer<CChar>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/depth","title":"var depth: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/endarray","title":"var endArray: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/endtable","title":"var endTable: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/pretty","title":"var pretty: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/startarray","title":"var startArray: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/starttable","title":"var startTable: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/startedarray","title":"var startedArray: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/startedtable","title":"var startedTable: Int32","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/userdata","title":"var userdata: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writedouble","title":"var writeDouble: ((UnsafeMutablePointer<json_encoder>?, Double) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writefalse","title":"var writeFalse: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writeint","title":"var writeInt: ((UnsafeMutablePointer<json_encoder>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writenull","title":"var writeNull: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writestring","title":"var writeString: ((UnsafeMutablePointer<json_encoder>?, UnsafePointer<CChar>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writestringfunc","title":"var writeStringFunc: ((UnsafeMutableRawPointer?, UnsafePointer<CChar>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_encoder\/writetrue","title":"var writeTrue: ((UnsafeMutablePointer<json_encoder>?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/json_encoder","title":"json_encoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_reader\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/json_reader\/init(read:userdata:)","title":"init(read: ((UnsafeMutableRawPointer?, UnsafeMutablePointer<UInt8>?, Int32) -> Int32)!, userdata: UnsafeMutableRawPointer!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_reader\/read","title":"var read: ((UnsafeMutableRawPointer?, UnsafeMutablePointer<UInt8>?, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/json_reader\/userdata","title":"var userdata: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/playdatekit\/json_reader","title":"json_reader","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/json_value\/init(type:data:)","title":"init(type: CChar, data: json_value.__Unnamed_union_data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value\/data","title":"var data: json_value.__Unnamed_union_data","type":"property"},{"path":"\/documentation\/playdatekit\/json_value\/type","title":"var type: CChar","type":"property"}],"path":"\/documentation\/playdatekit\/json_value","title":"json_value","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/l_valtype\/init(_:)","title":"init(UInt32)","type":"init"},{"path":"\/documentation\/playdatekit\/l_valtype\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/l_valtype\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/l_valtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/l_valtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/l_valtype","title":"l_valtype","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/ldiv_t\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/ldiv_t\/init(quot:rem:)","title":"init(quot: Int, rem: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/ldiv_t\/quot","title":"var quot: Int","type":"property"},{"path":"\/documentation\/playdatekit\/ldiv_t\/rem","title":"var rem: Int","type":"property"}],"path":"\/documentation\/playdatekit\/ldiv_t","title":"ldiv_t","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lldiv_t\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/lldiv_t\/init(quot:rem:)","title":"init(quot: Int64, rem: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lldiv_t\/quot","title":"var quot: Int64","type":"property"},{"path":"\/documentation\/playdatekit\/lldiv_t\/rem","title":"var rem: Int64","type":"property"}],"path":"\/documentation\/playdatekit\/lldiv_t","title":"lldiv_t","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lua_reg\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/lua_reg\/init(name:func:)","title":"init(name: UnsafePointer<CChar>!, func: lua_CFunction!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lua_reg\/func","title":"var `func`: lua_CFunction!","type":"property"},{"path":"\/documentation\/playdatekit\/lua_reg\/name","title":"var name: UnsafePointer<CChar>!","type":"property"}],"path":"\/documentation\/playdatekit\/lua_reg","title":"lua_reg","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lua_val\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/lua_val\/init(name:type:v:)","title":"init(name: UnsafePointer<CChar>!, type: l_valtype, v: lua_val.__Unnamed_union_v)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lua_val\/name","title":"var name: UnsafePointer<CChar>!","type":"property"},{"path":"\/documentation\/playdatekit\/lua_val\/type","title":"var type: l_valtype","type":"property"},{"path":"\/documentation\/playdatekit\/lua_val\/v","title":"var v: lua_val.__Unnamed_union_v","type":"property"}],"path":"\/documentation\/playdatekit\/lua_val","title":"lua_val","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/max_align_t\/init()","title":"init()","type":"init"}],"path":"\/documentation\/playdatekit\/max_align_t","title":"max_align_t","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/init(newsignal:freesignal:clearevents:addevent:removeevent:getmidicontrollernumber:)","title":"init(newSignal: (() -> OpaquePointer?)!, freeSignal: ((OpaquePointer?) -> Void)!, clearEvents: ((OpaquePointer?) -> Void)!, addEvent: ((OpaquePointer?, Int32, Float, Int32) -> Void)!, removeEvent: ((OpaquePointer?, Int32) -> Void)!, getMIDIControllerNumber: ((OpaquePointer?) -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/addevent","title":"var addEvent: ((OpaquePointer?, Int32, Float, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/clearevents","title":"var clearEvents: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/freesignal","title":"var freeSignal: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/getmidicontrollernumber","title":"var getMIDIControllerNumber: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/newsignal","title":"var newSignal: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_control_signal\/removeevent","title":"var removeEvent: ((OpaquePointer?, Int32) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_control_signal","title":"playdate_control_signal","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_display\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_display\/init(getwidth:getheight:setrefreshrate:setinverted:setscale:setmosaic:setflipped:setoffset:)","title":"init(getWidth: (() -> Int32)!, getHeight: (() -> Int32)!, setRefreshRate: ((Float) -> Void)!, setInverted: ((Int32) -> Void)!, setScale: ((UInt32) -> Void)!, setMosaic: ((UInt32, UInt32) -> Void)!, setFlipped: ((Int32, Int32) -> Void)!, setOffset: ((Int32, Int32) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_display\/getheight","title":"var getHeight: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/getwidth","title":"var getWidth: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/setflipped","title":"var setFlipped: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/setinverted","title":"var setInverted: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/setmosaic","title":"var setMosaic: ((UInt32, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/setoffset","title":"var setOffset: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/setrefreshrate","title":"var setRefreshRate: ((Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_display\/setscale","title":"var setScale: ((UInt32) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_display","title":"playdate_display","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_file\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_file\/init(geterr:listfiles:stat:mkdir:unlink:rename:open:close:read:write:flush:tell:seek:)","title":"init(geterr: (() -> UnsafePointer<CChar>?)!, listfiles: ((UnsafePointer<CChar>?, ((UnsafePointer<CChar>?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?, Int32) -> Int32)!, stat: ((UnsafePointer<CChar>?, UnsafeMutablePointer<FileStat>?) -> Int32)!, mkdir: ((UnsafePointer<CChar>?) -> Int32)!, unlink: ((UnsafePointer<CChar>?, Int32) -> Int32)!, rename: ((UnsafePointer<CChar>?, UnsafePointer<CChar>?) -> Int32)!, open: ((UnsafePointer<CChar>?, FileOptions) -> UnsafeMutableRawPointer?)!, close: ((UnsafeMutableRawPointer?) -> Int32)!, read: ((UnsafeMutableRawPointer?, UnsafeMutableRawPointer?, UInt32) -> Int32)!, write: ((UnsafeMutableRawPointer?, UnsafeRawPointer?, UInt32) -> Int32)!, flush: ((UnsafeMutableRawPointer?) -> Int32)!, tell: ((UnsafeMutableRawPointer?) -> Int32)!, seek: ((UnsafeMutableRawPointer?, Int32, Int32) -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_file\/close","title":"var close: ((UnsafeMutableRawPointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/flush","title":"var flush: ((UnsafeMutableRawPointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/geterr","title":"var geterr: (() -> UnsafePointer<CChar>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/listfiles","title":"var listfiles: ((UnsafePointer<CChar>?, ((UnsafePointer<CChar>?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/mkdir","title":"var mkdir: ((UnsafePointer<CChar>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/open","title":"var open: ((UnsafePointer<CChar>?, FileOptions) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/read","title":"var read: ((UnsafeMutableRawPointer?, UnsafeMutableRawPointer?, UInt32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/rename","title":"var rename: ((UnsafePointer<CChar>?, UnsafePointer<CChar>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/seek","title":"var seek: ((UnsafeMutableRawPointer?, Int32, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/stat","title":"var stat: ((UnsafePointer<CChar>?, UnsafeMutablePointer<FileStat>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/tell","title":"var tell: ((UnsafeMutableRawPointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/unlink","title":"var unlink: ((UnsafePointer<CChar>?, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_file\/write","title":"var write: ((UnsafeMutableRawPointer?, UnsafeRawPointer?, UInt32) -> Int32)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_file","title":"playdate_file","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/init(video:clear:setbackgroundcolor:setstencil:setdrawmode:setdrawoffset:setcliprect:clearcliprect:setlinecapstyle:setfont:settexttracking:pushcontext:popcontext:drawbitmap:tilebitmap:drawline:filltriangle:drawrect:fillrect:drawellipse:fill-638hn","title":"init(video: UnsafePointer<playdate_video>!, clear: ((LCDColor) -> Void)!, setBackgroundColor: ((LCDSolidColor) -> Void)!, setStencil: ((OpaquePointer?) -> Void)!, setDrawMode: ((LCDBitmapDrawMode) -> Void)!, setDrawOffset: ((Int32, Int32) -> Void)!, setClipRect: ((Int32, Int32, Int32, Int32) -> Void)!, clearClipRect: (() -> Void)!, setLineCapStyle: ((LCDLineCapStyle) -> Void)!, setFont: ((OpaquePointer?) -> Void)!, setTextTracking: ((Int32) -> Void)!, pushContext: ((OpaquePointer?) -> Void)!, popContext: (() -> Void)!, drawBitmap: ((OpaquePointer?, Int32, Int32, LCDBitmapFlip) -> Void)!, tileBitmap: ((OpaquePointer?, Int32, Int32, Int32, Int32, LCDBitmapFlip) -> Void)!, drawLine: ((Int32, Int32, Int32, Int32, Int32, LCDColor) -> Void)!, fillTriangle: ((Int32, Int32, Int32, Int32, Int32, Int32, LCDColor) -> Void)!, drawRect: ((Int32, Int32, Int32, Int32, LCDColor) -> Void)!, fillRect: ((Int32, Int32, Int32, Int32, LCDColor) -> Void)!, drawEllipse: ((Int32, Int32, Int32, Int32, Int32, Float, Float, LCDColor) -> Void)!, fillEllipse: ((Int32, Int32, Int32, Int32, Float, Float, LCDColor) -> Void)!, drawScaledBitmap: ((OpaquePointer?, Int32, Int32, Float, Float) -> Void)!, drawText: ((UnsafeRawPointer?, Int, PDStringEncoding, Int32, Int32) -> Int32)!, newBitmap: ((Int32, Int32, LCDColor) -> OpaquePointer?)!, freeBitmap: ((OpaquePointer?) -> Void)!, loadBitmap: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> OpaquePointer?)!, copyBitmap: ((OpaquePointer?) -> OpaquePointer?)!, loadIntoBitmap: ((UnsafePointer<CChar>?, OpaquePointer?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Void)!, getBitmapData: ((OpaquePointer?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?) -> Void)!, clearBitmap: ((OpaquePointer?, LCDColor) -> Void)!, rotatedBitmap: ((OpaquePointer?, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> OpaquePointer?)!, newBitmapTable: ((Int32, Int32, Int32) -> OpaquePointer?)!, freeBitmapTable: ((OpaquePointer?) -> Void)!, loadBitmapTable: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> OpaquePointer?)!, loadIntoBitmapTable: ((UnsafePointer<CChar>?, OpaquePointer?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Void)!, getTableBitmap: ((OpaquePointer?, Int32) -> OpaquePointer?)!, loadFont: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> OpaquePointer?)!, getFontPage: ((OpaquePointer?, UInt32) -> OpaquePointer?)!, getPageGlyph: ((OpaquePointer?, UInt32, UnsafeMutablePointer<OpaquePointer?>?, UnsafeMutablePointer<Int32>?) -> OpaquePointer?)!, getGlyphKerning: ((OpaquePointer?, UInt32, UInt32) -> Int32)!, getTextWidth: ((OpaquePointer?, UnsafeRawPointer?, Int, PDStringEncoding, Int32) -> Int32)!, getFrame: (() -> UnsafeMutablePointer<UInt8>?)!, getDisplayFrame: (() -> UnsafeMutablePointer<UInt8>?)!, getDebugBitmap: (() -> OpaquePointer?)!, copyFrameBufferBitmap: (() -> OpaquePointer?)!, markUpdatedRows: ((Int32, Int32) -> Void)!, display: (() -> Void)!, setColorToPattern: ((UnsafeMutablePointer<LCDColor>?, OpaquePointer?, Int32, Int32) -> Void)!, checkMaskCollision: ((OpaquePointer?, Int32, Int32, LCDBitmapFlip, OpaquePointer?, Int32, Int32, LCDBitmapFlip, LCDRect) -> Int32)!, setScreenClipRect: ((Int32, Int32, Int32, Int32) -> Void)!, fillPolygon: ((Int32, UnsafeMutablePointer<Int32>?, LCDColor, LCDPolygonFillRule) -> Void)!, getFontHeight: ((OpaquePointer?) -> UInt8)!, getDisplayBufferBitmap: (() -> OpaquePointer?)!, drawRotatedBitmap: ((OpaquePointer?, Int32, Int32, Float, Float, Float, Float, Float) -> Void)!, setTextLeading: ((Int32) -> Void)!, setBitmapMask: ((OpaquePointer?, OpaquePointer?) -> Int32)!, getBitmapMask: ((OpaquePointer?) -> OpaquePointer?)!, setStencilImage: ((OpaquePointer?, Int32) -> Void)!, makeFontFromData: ((OpaquePointer?, Int32) -> OpaquePointer?)!, getTextTracking: (() -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/checkmaskcollision","title":"var checkMaskCollision: ((OpaquePointer?, Int32, Int32, LCDBitmapFlip, OpaquePointer?, Int32, Int32, LCDBitmapFlip, LCDRect) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/clear","title":"var clear: ((LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/clearbitmap","title":"var clearBitmap: ((OpaquePointer?, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/clearcliprect","title":"var clearClipRect: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/copybitmap","title":"var copyBitmap: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/copyframebufferbitmap","title":"var copyFrameBufferBitmap: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/display","title":"var display: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawbitmap","title":"var drawBitmap: ((OpaquePointer?, Int32, Int32, LCDBitmapFlip) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawellipse","title":"var drawEllipse: ((Int32, Int32, Int32, Int32, Int32, Float, Float, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawline","title":"var drawLine: ((Int32, Int32, Int32, Int32, Int32, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawrect","title":"var drawRect: ((Int32, Int32, Int32, Int32, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawrotatedbitmap","title":"var drawRotatedBitmap: ((OpaquePointer?, Int32, Int32, Float, Float, Float, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawscaledbitmap","title":"var drawScaledBitmap: ((OpaquePointer?, Int32, Int32, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/drawtext","title":"var drawText: ((UnsafeRawPointer?, Int, PDStringEncoding, Int32, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/fillellipse","title":"var fillEllipse: ((Int32, Int32, Int32, Int32, Float, Float, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/fillpolygon","title":"var fillPolygon: ((Int32, UnsafeMutablePointer<Int32>?, LCDColor, LCDPolygonFillRule) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/fillrect","title":"var fillRect: ((Int32, Int32, Int32, Int32, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/filltriangle","title":"var fillTriangle: ((Int32, Int32, Int32, Int32, Int32, Int32, LCDColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/freebitmap","title":"var freeBitmap: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/freebitmaptable","title":"var freeBitmapTable: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getbitmapdata","title":"var getBitmapData: ((OpaquePointer?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getbitmapmask","title":"var getBitmapMask: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getdebugbitmap","title":"var getDebugBitmap: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getdisplaybufferbitmap","title":"var getDisplayBufferBitmap: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getdisplayframe","title":"var getDisplayFrame: (() -> UnsafeMutablePointer<UInt8>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getfontheight","title":"var getFontHeight: ((OpaquePointer?) -> UInt8)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getfontpage","title":"var getFontPage: ((OpaquePointer?, UInt32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getframe","title":"var getFrame: (() -> UnsafeMutablePointer<UInt8>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getglyphkerning","title":"var getGlyphKerning: ((OpaquePointer?, UInt32, UInt32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/getpageglyph","title":"var getPageGlyph: ((OpaquePointer?, UInt32, UnsafeMutablePointer<OpaquePointer?>?, UnsafeMutablePointer<Int32>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/gettablebitmap","title":"var getTableBitmap: ((OpaquePointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/gettexttracking","title":"var getTextTracking: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/gettextwidth","title":"var getTextWidth: ((OpaquePointer?, UnsafeRawPointer?, Int, PDStringEncoding, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/loadbitmap","title":"var loadBitmap: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/loadbitmaptable","title":"var loadBitmapTable: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/loadfont","title":"var loadFont: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/loadintobitmap","title":"var loadIntoBitmap: ((UnsafePointer<CChar>?, OpaquePointer?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/loadintobitmaptable","title":"var loadIntoBitmapTable: ((UnsafePointer<CChar>?, OpaquePointer?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/makefontfromdata","title":"var makeFontFromData: ((OpaquePointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/markupdatedrows","title":"var markUpdatedRows: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/newbitmap","title":"var newBitmap: ((Int32, Int32, LCDColor) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/newbitmaptable","title":"var newBitmapTable: ((Int32, Int32, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/popcontext","title":"var popContext: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/pushcontext","title":"var pushContext: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/rotatedbitmap","title":"var rotatedBitmap: ((OpaquePointer?, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setbackgroundcolor","title":"var setBackgroundColor: ((LCDSolidColor) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setbitmapmask","title":"var setBitmapMask: ((OpaquePointer?, OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setcliprect","title":"var setClipRect: ((Int32, Int32, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setcolortopattern","title":"var setColorToPattern: ((UnsafeMutablePointer<LCDColor>?, OpaquePointer?, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setdrawmode","title":"var setDrawMode: ((LCDBitmapDrawMode) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setdrawoffset","title":"var setDrawOffset: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setfont","title":"var setFont: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setlinecapstyle","title":"var setLineCapStyle: ((LCDLineCapStyle) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setscreencliprect","title":"var setScreenClipRect: ((Int32, Int32, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setstencil","title":"var setStencil: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/setstencilimage","title":"var setStencilImage: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/settextleading","title":"var setTextLeading: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/settexttracking","title":"var setTextTracking: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/tilebitmap","title":"var tileBitmap: ((OpaquePointer?, Int32, Int32, Int32, Int32, LCDBitmapFlip) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_graphics\/video","title":"var video: UnsafePointer<playdate_video>!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_graphics","title":"playdate_graphics","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_json\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_json\/init(initencoder:decode:decodestring:)","title":"init(initEncoder: ((UnsafeMutablePointer<json_encoder>?, ((UnsafeMutableRawPointer?, UnsafePointer<CChar>?, Int32) -> Void)?, UnsafeMutableRawPointer?, Int32) -> Void)!, decode: ((UnsafeMutablePointer<json_decoder>?, json_reader, UnsafeMutablePointer<json_value>?) -> Int32)!, decodeString: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, UnsafeMutablePointer<json_value>?) -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_json\/decode","title":"var decode: ((UnsafeMutablePointer<json_decoder>?, json_reader, UnsafeMutablePointer<json_value>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_json\/decodestring","title":"var decodeString: ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, UnsafeMutablePointer<json_value>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_json\/initencoder","title":"var initEncoder: ((UnsafeMutablePointer<json_encoder>?, ((UnsafeMutableRawPointer?, UnsafePointer<CChar>?, Int32) -> Void)?, UnsafeMutableRawPointer?, Int32) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_json","title":"playdate_json","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_lua\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_lua\/init(addfunction:registerclass:pushfunction:indexmetatable:stop:start:getargcount:getargtype:argisnil:getargbool:getargint:getargfloat:getargstring:getargbytes:getargobject:getbitmap:getsprite:pushnil:pushbool:pushint:pushfloat:pushstring:p-7uv6x","title":"init(addFunction: ((lua_CFunction?, UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Int32)!, registerClass: ((UnsafePointer<CChar>?, UnsafePointer<lua_reg>?, UnsafePointer<lua_val>?, Int32, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Int32)!, pushFunction: ((lua_CFunction?) -> Void)!, indexMetatable: (() -> Int32)!, stop: (() -> Void)!, start: (() -> Void)!, getArgCount: (() -> Int32)!, getArgType: ((Int32, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> LuaType)!, argIsNil: ((Int32) -> Int32)!, getArgBool: ((Int32) -> Int32)!, getArgInt: ((Int32) -> Int32)!, getArgFloat: ((Int32) -> Float)!, getArgString: ((Int32) -> UnsafePointer<CChar>?)!, getArgBytes: ((Int32, UnsafeMutablePointer<Int>?) -> UnsafePointer<CChar>?)!, getArgObject: ((Int32, UnsafeMutablePointer<CChar>?, UnsafeMutablePointer<OpaquePointer?>?) -> UnsafeMutableRawPointer?)!, getBitmap: ((Int32) -> OpaquePointer?)!, getSprite: ((Int32) -> OpaquePointer?)!, pushNil: (() -> Void)!, pushBool: ((Int32) -> Void)!, pushInt: ((Int32) -> Void)!, pushFloat: ((Float) -> Void)!, pushString: ((UnsafePointer<CChar>?) -> Void)!, pushBytes: ((UnsafePointer<CChar>?, Int) -> Void)!, pushBitmap: ((OpaquePointer?) -> Void)!, pushSprite: ((OpaquePointer?) -> Void)!, pushObject: ((UnsafeMutableRawPointer?, UnsafeMutablePointer<CChar>?, Int32) -> OpaquePointer?)!, retainObject: ((OpaquePointer?) -> OpaquePointer?)!, releaseObject: ((OpaquePointer?) -> Void)!, setUserValue: ((OpaquePointer?, UInt32) -> Void)!, getUserValue: ((OpaquePointer?, UInt32) -> Int32)!, callFunction_deprecated: ((UnsafePointer<CChar>?, Int32) -> Void)!, callFunction: ((UnsafePointer<CChar>?, Int32, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_lua\/addfunction","title":"var addFunction: ((lua_CFunction?, UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/argisnil","title":"var argIsNil: ((Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/callfunction","title":"var callFunction: ((UnsafePointer<CChar>?, Int32, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/callfunction_deprecated","title":"var callFunction_deprecated: ((UnsafePointer<CChar>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargbool","title":"var getArgBool: ((Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargbytes","title":"var getArgBytes: ((Int32, UnsafeMutablePointer<Int>?) -> UnsafePointer<CChar>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargcount","title":"var getArgCount: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargfloat","title":"var getArgFloat: ((Int32) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargint","title":"var getArgInt: ((Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargobject","title":"var getArgObject: ((Int32, UnsafeMutablePointer<CChar>?, UnsafeMutablePointer<OpaquePointer?>?) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargstring","title":"var getArgString: ((Int32) -> UnsafePointer<CChar>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getargtype","title":"var getArgType: ((Int32, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> LuaType)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getbitmap","title":"var getBitmap: ((Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getsprite","title":"var getSprite: ((Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/getuservalue","title":"var getUserValue: ((OpaquePointer?, UInt32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/indexmetatable","title":"var indexMetatable: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushbitmap","title":"var pushBitmap: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushbool","title":"var pushBool: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushbytes","title":"var pushBytes: ((UnsafePointer<CChar>?, Int) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushfloat","title":"var pushFloat: ((Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushfunction","title":"var pushFunction: ((lua_CFunction?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushint","title":"var pushInt: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushnil","title":"var pushNil: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushobject","title":"var pushObject: ((UnsafeMutableRawPointer?, UnsafeMutablePointer<CChar>?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushsprite","title":"var pushSprite: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/pushstring","title":"var pushString: ((UnsafePointer<CChar>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/registerclass","title":"var registerClass: ((UnsafePointer<CChar>?, UnsafePointer<lua_reg>?, UnsafePointer<lua_val>?, Int32, UnsafeMutablePointer<UnsafePointer<CChar>?>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/releaseobject","title":"var releaseObject: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/retainobject","title":"var retainObject: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/setuservalue","title":"var setUserValue: ((OpaquePointer?, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/start","title":"var start: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_lua\/stop","title":"var stop: (() -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_lua","title":"playdate_lua","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/init(addscore:getpersonalbest:freescore:getscoreboards:freeboardslist:getscores:freescoreslist:)","title":"init(addScore: ((UnsafePointer<CChar>?, UInt32, AddScoreCallback?) -> Int32)!, getPersonalBest: ((UnsafePointer<CChar>?, PersonalBestCallback?) -> Int32)!, freeScore: ((UnsafeMutablePointer<PDScore>?) -> Void)!, getScoreboards: ((BoardsListCallback?) -> Int32)!, freeBoardsList: ((UnsafeMutablePointer<PDBoardsList>?) -> Void)!, getScores: ((UnsafePointer<CChar>?, ScoresCallback?) -> Int32)!, freeScoresList: ((UnsafeMutablePointer<PDScoresList>?) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/addscore","title":"var addScore: ((UnsafePointer<CChar>?, UInt32, AddScoreCallback?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/freeboardslist","title":"var freeBoardsList: ((UnsafeMutablePointer<PDBoardsList>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/freescore","title":"var freeScore: ((UnsafeMutablePointer<PDScore>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/freescoreslist","title":"var freeScoresList: ((UnsafeMutablePointer<PDScoresList>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/getpersonalbest","title":"var getPersonalBest: ((UnsafePointer<CChar>?, PersonalBestCallback?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/getscoreboards","title":"var getScoreboards: ((BoardsListCallback?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_scoreboards\/getscores","title":"var getScores: ((UnsafePointer<CChar>?, ScoresCallback?) -> Int32)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_scoreboards","title":"playdate_scoreboards","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound\/init(channel:fileplayer:sample:sampleplayer:synth:sequence:effect:lfo:envelope:source:controlsignal:track:instrument:getcurrenttime:addsource:getdefaultchannel:addchannel:removechannel:setmiccallback:getheadphonestate:setoutputsactive:remov-1s8f3","title":"init(channel: UnsafePointer<playdate_sound_channel>!, fileplayer: UnsafePointer<playdate_sound_fileplayer>!, sample: UnsafePointer<playdate_sound_sample>!, sampleplayer: UnsafePointer<playdate_sound_sampleplayer>!, synth: UnsafePointer<playdate_sound_synth>!, sequence: UnsafePointer<playdate_sound_sequence>!, effect: UnsafePointer<playdate_sound_effect>!, lfo: UnsafePointer<playdate_sound_lfo>!, envelope: UnsafePointer<playdate_sound_envelope>!, source: UnsafePointer<playdate_sound_source>!, controlsignal: UnsafePointer<playdate_control_signal>!, track: UnsafePointer<playdate_sound_track>!, instrument: UnsafePointer<playdate_sound_instrument>!, getCurrentTime: (() -> UInt32)!, addSource: ((((UnsafeMutableRawPointer?, UnsafeMutablePointer<Int16>?, UnsafeMutablePointer<Int16>?, Int32) -> Int32)?, UnsafeMutableRawPointer?, Int32) -> OpaquePointer?)!, getDefaultChannel: (() -> OpaquePointer?)!, addChannel: ((OpaquePointer?) -> Int32)!, removeChannel: ((OpaquePointer?) -> Int32)!, setMicCallback: ((((UnsafeMutableRawPointer?, UnsafeMutablePointer<Int16>?, Int32) -> Int32)?, UnsafeMutableRawPointer?, MicSource) -> Int32)!, getHeadphoneState: ((UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, ((Int32, Int32) -> Void)?) -> Void)!, setOutputsActive: ((Int32, Int32) -> Void)!, removeSource: ((OpaquePointer?) -> Int32)!, signal: UnsafePointer<playdate_sound_signal>!, getError: (() -> UnsafePointer<CChar>?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound\/addchannel","title":"var addChannel: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/addsource","title":"var addSource: ((((UnsafeMutableRawPointer?, UnsafeMutablePointer<Int16>?, UnsafeMutablePointer<Int16>?, Int32) -> Int32)?, UnsafeMutableRawPointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/channel","title":"var channel: UnsafePointer<playdate_sound_channel>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/controlsignal","title":"var controlsignal: UnsafePointer<playdate_control_signal>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/effect","title":"var effect: UnsafePointer<playdate_sound_effect>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/envelope","title":"var envelope: UnsafePointer<playdate_sound_envelope>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/fileplayer","title":"var fileplayer: UnsafePointer<playdate_sound_fileplayer>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/getcurrenttime","title":"var getCurrentTime: (() -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/getdefaultchannel","title":"var getDefaultChannel: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/geterror","title":"var getError: (() -> UnsafePointer<CChar>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/getheadphonestate","title":"var getHeadphoneState: ((UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, ((Int32, Int32) -> Void)?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/instrument","title":"var instrument: UnsafePointer<playdate_sound_instrument>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/lfo","title":"var lfo: UnsafePointer<playdate_sound_lfo>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/removechannel","title":"var removeChannel: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/removesource","title":"var removeSource: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/sample","title":"var sample: UnsafePointer<playdate_sound_sample>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/sampleplayer","title":"var sampleplayer: UnsafePointer<playdate_sound_sampleplayer>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/sequence","title":"var sequence: UnsafePointer<playdate_sound_sequence>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/setmiccallback","title":"var setMicCallback: ((((UnsafeMutableRawPointer?, UnsafeMutablePointer<Int16>?, Int32) -> Int32)?, UnsafeMutableRawPointer?, MicSource) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/setoutputsactive","title":"var setOutputsActive: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/signal","title":"var signal: UnsafePointer<playdate_sound_signal>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/source","title":"var source: UnsafePointer<playdate_sound_source>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/synth","title":"var synth: UnsafePointer<playdate_sound_synth>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound\/track","title":"var track: UnsafePointer<playdate_sound_track>!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound","title":"playdate_sound","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/init(newchannel:freechannel:addsource:removesource:addcallbacksource:addeffect:removeeffect:setvolume:getvolume:setvolumemodulator:getvolumemodulator:setpan:setpanmodulator:getpanmodulator:getdrylevelsignal:getwetlevelsignal:)","title":"init(newChannel: (() -> OpaquePointer?)!, freeChannel: ((OpaquePointer?) -> Void)!, addSource: ((OpaquePointer?, OpaquePointer?) -> Int32)!, removeSource: ((OpaquePointer?, OpaquePointer?) -> Int32)!, addCallbackSource: ((OpaquePointer?, ((UnsafeMutableRawPointer?, UnsafeMutablePointer<Int16>?, UnsafeMutablePointer<Int16>?, Int32) -> Int32)?, UnsafeMutableRawPointer?, Int32) -> OpaquePointer?)!, addEffect: ((OpaquePointer?, OpaquePointer?) -> Void)!, removeEffect: ((OpaquePointer?, OpaquePointer?) -> Void)!, setVolume: ((OpaquePointer?, Float) -> Void)!, getVolume: ((OpaquePointer?) -> Float)!, setVolumeModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getVolumeModulator: ((OpaquePointer?) -> OpaquePointer?)!, setPan: ((OpaquePointer?, Float) -> Void)!, setPanModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getPanModulator: ((OpaquePointer?) -> OpaquePointer?)!, getDryLevelSignal: ((OpaquePointer?) -> OpaquePointer?)!, getWetLevelSignal: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/addcallbacksource","title":"var addCallbackSource: ((OpaquePointer?, ((UnsafeMutableRawPointer?, UnsafeMutablePointer<Int16>?, UnsafeMutablePointer<Int16>?, Int32) -> Int32)?, UnsafeMutableRawPointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/addeffect","title":"var addEffect: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/addsource","title":"var addSource: ((OpaquePointer?, OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/freechannel","title":"var freeChannel: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/getdrylevelsignal","title":"var getDryLevelSignal: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/getpanmodulator","title":"var getPanModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/getvolume","title":"var getVolume: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/getvolumemodulator","title":"var getVolumeModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/getwetlevelsignal","title":"var getWetLevelSignal: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/newchannel","title":"var newChannel: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/removeeffect","title":"var removeEffect: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/removesource","title":"var removeSource: ((OpaquePointer?, OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/setpan","title":"var setPan: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/setpanmodulator","title":"var setPanModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/setvolume","title":"var setVolume: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_channel\/setvolumemodulator","title":"var setVolumeModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_channel","title":"playdate_sound_channel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/init(neweffect:freeeffect:setmix:setmixmodulator:getmixmodulator:setuserdata:getuserdata:twopolefilter:onepolefilter:bitcrusher:ringmodulator:delayline:overdrive:)","title":"init(newEffect: ((((OpaquePointer?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, Int32, Int32) -> Int32)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!, freeEffect: ((OpaquePointer?) -> Void)!, setMix: ((OpaquePointer?, Float) -> Void)!, setMixModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getMixModulator: ((OpaquePointer?) -> OpaquePointer?)!, setUserdata: ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)!, getUserdata: ((OpaquePointer?) -> UnsafeMutableRawPointer?)!, twopolefilter: UnsafePointer<playdate_sound_effect_twopolefilter>!, onepolefilter: UnsafePointer<playdate_sound_effect_onepolefilter>!, bitcrusher: UnsafePointer<playdate_sound_effect_bitcrusher>!, ringmodulator: UnsafePointer<playdate_sound_effect_ringmodulator>!, delayline: UnsafePointer<playdate_sound_effect_delayline>!, overdrive: UnsafePointer<playdate_sound_effect_overdrive>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/bitcrusher","title":"var bitcrusher: UnsafePointer<playdate_sound_effect_bitcrusher>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/delayline","title":"var delayline: UnsafePointer<playdate_sound_effect_delayline>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/freeeffect","title":"var freeEffect: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/getmixmodulator","title":"var getMixModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/getuserdata","title":"var getUserdata: ((OpaquePointer?) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/neweffect","title":"var newEffect: ((((OpaquePointer?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, Int32, Int32) -> Int32)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/onepolefilter","title":"var onepolefilter: UnsafePointer<playdate_sound_effect_onepolefilter>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/overdrive","title":"var overdrive: UnsafePointer<playdate_sound_effect_overdrive>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/ringmodulator","title":"var ringmodulator: UnsafePointer<playdate_sound_effect_ringmodulator>!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/setmix","title":"var setMix: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/setmixmodulator","title":"var setMixModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/setuserdata","title":"var setUserdata: ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect\/twopolefilter","title":"var twopolefilter: UnsafePointer<playdate_sound_effect_twopolefilter>!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect","title":"playdate_sound_effect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/init(newbitcrusher:freebitcrusher:setamount:setamountmodulator:getamountmodulator:setundersampling:setundersamplemodulator:getundersamplemodulator:)","title":"init(newBitCrusher: (() -> OpaquePointer?)!, freeBitCrusher: ((OpaquePointer?) -> Void)!, setAmount: ((OpaquePointer?, Float) -> Void)!, setAmountModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getAmountModulator: ((OpaquePointer?) -> OpaquePointer?)!, setUndersampling: ((OpaquePointer?, Float) -> Void)!, setUndersampleModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getUndersampleModulator: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/freebitcrusher","title":"var freeBitCrusher: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/getamountmodulator","title":"var getAmountModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/getundersamplemodulator","title":"var getUndersampleModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/newbitcrusher","title":"var newBitCrusher: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/setamount","title":"var setAmount: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/setamountmodulator","title":"var setAmountModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/setundersamplemodulator","title":"var setUndersampleModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher\/setundersampling","title":"var setUndersampling: ((OpaquePointer?, Float) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect_bitcrusher","title":"playdate_sound_effect_bitcrusher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/init(newdelayline:freedelayline:setlength:setfeedback:addtap:freetap:settapdelay:settapdelaymodulator:gettapdelaymodulator:settapchannelsflipped:)","title":"init(newDelayLine: ((Int32, Int32) -> OpaquePointer?)!, freeDelayLine: ((OpaquePointer?) -> Void)!, setLength: ((OpaquePointer?, Int32) -> Void)!, setFeedback: ((OpaquePointer?, Float) -> Void)!, addTap: ((OpaquePointer?, Int32) -> OpaquePointer?)!, freeTap: ((OpaquePointer?) -> Void)!, setTapDelay: ((OpaquePointer?, Int32) -> Void)!, setTapDelayModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getTapDelayModulator: ((OpaquePointer?) -> OpaquePointer?)!, setTapChannelsFlipped: ((OpaquePointer?, Int32) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/addtap","title":"var addTap: ((OpaquePointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/freedelayline","title":"var freeDelayLine: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/freetap","title":"var freeTap: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/gettapdelaymodulator","title":"var getTapDelayModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/newdelayline","title":"var newDelayLine: ((Int32, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/setfeedback","title":"var setFeedback: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/setlength","title":"var setLength: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/settapchannelsflipped","title":"var setTapChannelsFlipped: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/settapdelay","title":"var setTapDelay: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline\/settapdelaymodulator","title":"var setTapDelayModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect_delayline","title":"playdate_sound_effect_delayline","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/init(newfilter:freefilter:setparameter:setparametermodulator:getparametermodulator:)","title":"init(newFilter: (() -> OpaquePointer?)!, freeFilter: ((OpaquePointer?) -> Void)!, setParameter: ((OpaquePointer?, Float) -> Void)!, setParameterModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getParameterModulator: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/freefilter","title":"var freeFilter: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/getparametermodulator","title":"var getParameterModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/newfilter","title":"var newFilter: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/setparameter","title":"var setParameter: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter\/setparametermodulator","title":"var setParameterModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect_onepolefilter","title":"playdate_sound_effect_onepolefilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/init(newoverdrive:freeoverdrive:setgain:setlimit:setlimitmodulator:getlimitmodulator:setoffset:setoffsetmodulator:getoffsetmodulator:)","title":"init(newOverdrive: (() -> OpaquePointer?)!, freeOverdrive: ((OpaquePointer?) -> Void)!, setGain: ((OpaquePointer?, Float) -> Void)!, setLimit: ((OpaquePointer?, Float) -> Void)!, setLimitModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getLimitModulator: ((OpaquePointer?) -> OpaquePointer?)!, setOffset: ((OpaquePointer?, Float) -> Void)!, setOffsetModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getOffsetModulator: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/freeoverdrive","title":"var freeOverdrive: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/getlimitmodulator","title":"var getLimitModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/getoffsetmodulator","title":"var getOffsetModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/newoverdrive","title":"var newOverdrive: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/setgain","title":"var setGain: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/setlimit","title":"var setLimit: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/setlimitmodulator","title":"var setLimitModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/setoffset","title":"var setOffset: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive\/setoffsetmodulator","title":"var setOffsetModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect_overdrive","title":"playdate_sound_effect_overdrive","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/init(newringmod:freeringmod:setfrequency:setfrequencymodulator:getfrequencymodulator:)","title":"init(newRingmod: (() -> OpaquePointer?)!, freeRingmod: ((OpaquePointer?) -> Void)!, setFrequency: ((OpaquePointer?, Float) -> Void)!, setFrequencyModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getFrequencyModulator: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/freeringmod","title":"var freeRingmod: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/getfrequencymodulator","title":"var getFrequencyModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/newringmod","title":"var newRingmod: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/setfrequency","title":"var setFrequency: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator\/setfrequencymodulator","title":"var setFrequencyModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect_ringmodulator","title":"playdate_sound_effect_ringmodulator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/init(newfilter:freefilter:settype:setfrequency:setfrequencymodulator:getfrequencymodulator:setgain:setresonance:setresonancemodulator:getresonancemodulator:)","title":"init(newFilter: (() -> OpaquePointer?)!, freeFilter: ((OpaquePointer?) -> Void)!, setType: ((OpaquePointer?, TwoPoleFilterType) -> Void)!, setFrequency: ((OpaquePointer?, Float) -> Void)!, setFrequencyModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getFrequencyModulator: ((OpaquePointer?) -> OpaquePointer?)!, setGain: ((OpaquePointer?, Float) -> Void)!, setResonance: ((OpaquePointer?, Float) -> Void)!, setResonanceModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getResonanceModulator: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/freefilter","title":"var freeFilter: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/getfrequencymodulator","title":"var getFrequencyModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/getresonancemodulator","title":"var getResonanceModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/newfilter","title":"var newFilter: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/setfrequency","title":"var setFrequency: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/setfrequencymodulator","title":"var setFrequencyModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/setgain","title":"var setGain: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/setresonance","title":"var setResonance: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/setresonancemodulator","title":"var setResonanceModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter\/settype","title":"var setType: ((OpaquePointer?, TwoPoleFilterType) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_effect_twopolefilter","title":"playdate_sound_effect_twopolefilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/init(newenvelope:freeenvelope:setattack:setdecay:setsustain:setrelease:setlegato:setretrigger:getvalue:setcurvature:setvelocitysensitivity:setratescaling:)","title":"init(newEnvelope: ((Float, Float, Float, Float) -> OpaquePointer?)!, freeEnvelope: ((OpaquePointer?) -> Void)!, setAttack: ((OpaquePointer?, Float) -> Void)!, setDecay: ((OpaquePointer?, Float) -> Void)!, setSustain: ((OpaquePointer?, Float) -> Void)!, setRelease: ((OpaquePointer?, Float) -> Void)!, setLegato: ((OpaquePointer?, Int32) -> Void)!, setRetrigger: ((OpaquePointer?, Int32) -> Void)!, getValue: ((OpaquePointer?) -> Float)!, setCurvature: ((OpaquePointer?, Float) -> Void)!, setVelocitySensitivity: ((OpaquePointer?, Float) -> Void)!, setRateScaling: ((OpaquePointer?, Float, MIDINote, MIDINote) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/freeenvelope","title":"var freeEnvelope: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/getvalue","title":"var getValue: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/newenvelope","title":"var newEnvelope: ((Float, Float, Float, Float) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setattack","title":"var setAttack: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setcurvature","title":"var setCurvature: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setdecay","title":"var setDecay: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setlegato","title":"var setLegato: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setratescaling","title":"var setRateScaling: ((OpaquePointer?, Float, MIDINote, MIDINote) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setrelease","title":"var setRelease: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setretrigger","title":"var setRetrigger: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setsustain","title":"var setSustain: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_envelope\/setvelocitysensitivity","title":"var setVelocitySensitivity: ((OpaquePointer?, Float) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_envelope","title":"playdate_sound_envelope","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/init(newplayer:freeplayer:loadintoplayer:setbufferlength:play:isplaying:pause:stop:setvolume:getvolume:getlength:setoffset:setrate:setlooprange:didunderrun:setfinishcallback:setloopcallback:getoffset:getrate:setstoponunderrun:fadevolume:set-98tyj","title":"init(newPlayer: (() -> OpaquePointer?)!, freePlayer: ((OpaquePointer?) -> Void)!, loadIntoPlayer: ((OpaquePointer?, UnsafePointer<CChar>?) -> Int32)!, setBufferLength: ((OpaquePointer?, Float) -> Void)!, play: ((OpaquePointer?, Int32) -> Int32)!, isPlaying: ((OpaquePointer?) -> Int32)!, pause: ((OpaquePointer?) -> Void)!, stop: ((OpaquePointer?) -> Void)!, setVolume: ((OpaquePointer?, Float, Float) -> Void)!, getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, getLength: ((OpaquePointer?) -> Float)!, setOffset: ((OpaquePointer?, Float) -> Void)!, setRate: ((OpaquePointer?, Float) -> Void)!, setLoopRange: ((OpaquePointer?, Float, Float) -> Void)!, didUnderrun: ((OpaquePointer?) -> Int32)!, setFinishCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!, setLoopCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!, getOffset: ((OpaquePointer?) -> Float)!, getRate: ((OpaquePointer?) -> Float)!, setStopOnUnderrun: ((OpaquePointer?, Int32) -> Void)!, fadeVolume: ((OpaquePointer?, Float, Float, Int32, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!, setMP3StreamSource: ((OpaquePointer?, ((UnsafeMutablePointer<UInt8>?, Int32, UnsafeMutableRawPointer?) -> Int32)?, UnsafeMutableRawPointer?, Float) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/didunderrun","title":"var didUnderrun: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/fadevolume","title":"var fadeVolume: ((OpaquePointer?, Float, Float, Int32, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/freeplayer","title":"var freePlayer: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/getlength","title":"var getLength: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/getoffset","title":"var getOffset: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/getrate","title":"var getRate: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/getvolume","title":"var getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/isplaying","title":"var isPlaying: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/loadintoplayer","title":"var loadIntoPlayer: ((OpaquePointer?, UnsafePointer<CChar>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/newplayer","title":"var newPlayer: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/pause","title":"var pause: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/play","title":"var play: ((OpaquePointer?, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setbufferlength","title":"var setBufferLength: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setfinishcallback","title":"var setFinishCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setloopcallback","title":"var setLoopCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setlooprange","title":"var setLoopRange: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setmp3streamsource","title":"var setMP3StreamSource: ((OpaquePointer?, ((UnsafeMutablePointer<UInt8>?, Int32, UnsafeMutableRawPointer?) -> Int32)?, UnsafeMutableRawPointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setoffset","title":"var setOffset: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setrate","title":"var setRate: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setstoponunderrun","title":"var setStopOnUnderrun: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/setvolume","title":"var setVolume: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer\/stop","title":"var stop: ((OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_fileplayer","title":"playdate_sound_fileplayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/init(newinstrument:freeinstrument:addvoice:playnote:playmidinote:setpitchbend:setpitchbendrange:settranspose:noteoff:allnotesoff:setvolume:getvolume:activevoicecount:)","title":"init(newInstrument: (() -> OpaquePointer?)!, freeInstrument: ((OpaquePointer?) -> Void)!, addVoice: ((OpaquePointer?, OpaquePointer?, MIDINote, MIDINote, Float) -> Int32)!, playNote: ((OpaquePointer?, Float, Float, Float, UInt32) -> OpaquePointer?)!, playMIDINote: ((OpaquePointer?, MIDINote, Float, Float, UInt32) -> OpaquePointer?)!, setPitchBend: ((OpaquePointer?, Float) -> Void)!, setPitchBendRange: ((OpaquePointer?, Float) -> Void)!, setTranspose: ((OpaquePointer?, Float) -> Void)!, noteOff: ((OpaquePointer?, MIDINote, UInt32) -> Void)!, allNotesOff: ((OpaquePointer?, UInt32) -> Void)!, setVolume: ((OpaquePointer?, Float, Float) -> Void)!, getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, activeVoiceCount: ((OpaquePointer?) -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/activevoicecount","title":"var activeVoiceCount: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/addvoice","title":"var addVoice: ((OpaquePointer?, OpaquePointer?, MIDINote, MIDINote, Float) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/allnotesoff","title":"var allNotesOff: ((OpaquePointer?, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/freeinstrument","title":"var freeInstrument: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/getvolume","title":"var getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/newinstrument","title":"var newInstrument: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/noteoff","title":"var noteOff: ((OpaquePointer?, MIDINote, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/playmidinote","title":"var playMIDINote: ((OpaquePointer?, MIDINote, Float, Float, UInt32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/playnote","title":"var playNote: ((OpaquePointer?, Float, Float, Float, UInt32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/setpitchbend","title":"var setPitchBend: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/setpitchbendrange","title":"var setPitchBendRange: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/settranspose","title":"var setTranspose: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_instrument\/setvolume","title":"var setVolume: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_instrument","title":"playdate_sound_instrument","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/init(newlfo:freelfo:settype:setrate:setphase:setcenter:setdepth:setarpeggiation:setfunction:setdelay:setretrigger:getvalue:setglobal:setstartphase:)","title":"init(newLFO: ((LFOType) -> OpaquePointer?)!, freeLFO: ((OpaquePointer?) -> Void)!, setType: ((OpaquePointer?, LFOType) -> Void)!, setRate: ((OpaquePointer?, Float) -> Void)!, setPhase: ((OpaquePointer?, Float) -> Void)!, setCenter: ((OpaquePointer?, Float) -> Void)!, setDepth: ((OpaquePointer?, Float) -> Void)!, setArpeggiation: ((OpaquePointer?, Int32, UnsafeMutablePointer<Float>?) -> Void)!, setFunction: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Float)?, UnsafeMutableRawPointer?, Int32) -> Void)!, setDelay: ((OpaquePointer?, Float, Float) -> Void)!, setRetrigger: ((OpaquePointer?, Int32) -> Void)!, getValue: ((OpaquePointer?) -> Float)!, setGlobal: ((OpaquePointer?, Int32) -> Void)!, setStartPhase: ((OpaquePointer?, Float) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/freelfo","title":"var freeLFO: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/getvalue","title":"var getValue: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/newlfo","title":"var newLFO: ((LFOType) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setarpeggiation","title":"var setArpeggiation: ((OpaquePointer?, Int32, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setcenter","title":"var setCenter: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setdelay","title":"var setDelay: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setdepth","title":"var setDepth: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setfunction","title":"var setFunction: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Float)?, UnsafeMutableRawPointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setglobal","title":"var setGlobal: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setphase","title":"var setPhase: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setrate","title":"var setRate: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setretrigger","title":"var setRetrigger: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/setstartphase","title":"var setStartPhase: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_lfo\/settype","title":"var setType: ((OpaquePointer?, LFOType) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_lfo","title":"playdate_sound_lfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/init(newsamplebuffer:loadintosample:load:newsamplefromdata:getdata:freesample:getlength:decompress:)","title":"init(newSampleBuffer: ((Int32) -> OpaquePointer?)!, loadIntoSample: ((OpaquePointer?, UnsafePointer<CChar>?) -> Int32)!, load: ((UnsafePointer<CChar>?) -> OpaquePointer?)!, newSampleFromData: ((UnsafeMutablePointer<UInt8>?, SoundFormat, UInt32, Int32) -> OpaquePointer?)!, getData: ((OpaquePointer?, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?, UnsafeMutablePointer<SoundFormat>?, UnsafeMutablePointer<UInt32>?, UnsafeMutablePointer<UInt32>?) -> Void)!, freeSample: ((OpaquePointer?) -> Void)!, getLength: ((OpaquePointer?) -> Float)!, decompress: ((OpaquePointer?) -> Int32)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/decompress","title":"var decompress: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/freesample","title":"var freeSample: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/getdata","title":"var getData: ((OpaquePointer?, UnsafeMutablePointer<UnsafeMutablePointer<UInt8>?>?, UnsafeMutablePointer<SoundFormat>?, UnsafeMutablePointer<UInt32>?, UnsafeMutablePointer<UInt32>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/getlength","title":"var getLength: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/load","title":"var load: ((UnsafePointer<CChar>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/loadintosample","title":"var loadIntoSample: ((OpaquePointer?, UnsafePointer<CChar>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/newsamplebuffer","title":"var newSampleBuffer: ((Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sample\/newsamplefromdata","title":"var newSampleFromData: ((UnsafeMutablePointer<UInt8>?, SoundFormat, UInt32, Int32) -> OpaquePointer?)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_sample","title":"playdate_sound_sample","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/init(newplayer:freeplayer:setsample:play:isplaying:stop:setvolume:getvolume:getlength:setoffset:setrate:setplayrange:setfinishcallback:setloopcallback:getoffset:getrate:setpaused:)","title":"init(newPlayer: (() -> OpaquePointer?)!, freePlayer: ((OpaquePointer?) -> Void)!, setSample: ((OpaquePointer?, OpaquePointer?) -> Void)!, play: ((OpaquePointer?, Int32, Float) -> Int32)!, isPlaying: ((OpaquePointer?) -> Int32)!, stop: ((OpaquePointer?) -> Void)!, setVolume: ((OpaquePointer?, Float, Float) -> Void)!, getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, getLength: ((OpaquePointer?) -> Float)!, setOffset: ((OpaquePointer?, Float) -> Void)!, setRate: ((OpaquePointer?, Float) -> Void)!, setPlayRange: ((OpaquePointer?, Int32, Int32) -> Void)!, setFinishCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!, setLoopCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!, getOffset: ((OpaquePointer?) -> Float)!, getRate: ((OpaquePointer?) -> Float)!, setPaused: ((OpaquePointer?, Int32) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/freeplayer","title":"var freePlayer: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/getlength","title":"var getLength: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/getoffset","title":"var getOffset: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/getrate","title":"var getRate: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/getvolume","title":"var getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/isplaying","title":"var isPlaying: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/newplayer","title":"var newPlayer: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/play","title":"var play: ((OpaquePointer?, Int32, Float) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setfinishcallback","title":"var setFinishCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setloopcallback","title":"var setLoopCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setoffset","title":"var setOffset: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setpaused","title":"var setPaused: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setplayrange","title":"var setPlayRange: ((OpaquePointer?, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setrate","title":"var setRate: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setsample","title":"var setSample: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/setvolume","title":"var setVolume: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer\/stop","title":"var stop: ((OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_sampleplayer","title":"playdate_sound_sampleplayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/init(newsequence:freesequence:loadmidifile:gettime:settime:setloops:gettempo:settempo:gettrackcount:addtrack:gettrackatindex:settrackatindex:allnotesoff:isplaying:getlength:play:stop:getcurrentstep:setcurrentstep:)","title":"init(newSequence: (() -> OpaquePointer?)!, freeSequence: ((OpaquePointer?) -> Void)!, loadMIDIFile: ((OpaquePointer?, UnsafePointer<CChar>?) -> Int32)!, getTime: ((OpaquePointer?) -> UInt32)!, setTime: ((OpaquePointer?, UInt32) -> Void)!, setLoops: ((OpaquePointer?, Int32, Int32, Int32) -> Void)!, getTempo: ((OpaquePointer?) -> Int32)!, setTempo: ((OpaquePointer?, Float) -> Void)!, getTrackCount: ((OpaquePointer?) -> Int32)!, addTrack: ((OpaquePointer?) -> OpaquePointer?)!, getTrackAtIndex: ((OpaquePointer?, UInt32) -> OpaquePointer?)!, setTrackAtIndex: ((OpaquePointer?, OpaquePointer?, UInt32) -> Void)!, allNotesOff: ((OpaquePointer?) -> Void)!, isPlaying: ((OpaquePointer?) -> Int32)!, getLength: ((OpaquePointer?) -> UInt32)!, play: ((OpaquePointer?, SequenceFinishedCallback?, UnsafeMutableRawPointer?) -> Void)!, stop: ((OpaquePointer?) -> Void)!, getCurrentStep: ((OpaquePointer?, UnsafeMutablePointer<Int32>?) -> Int32)!, setCurrentStep: ((OpaquePointer?, Int32, Int32, Int32) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/addtrack","title":"var addTrack: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/allnotesoff","title":"var allNotesOff: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/freesequence","title":"var freeSequence: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/getcurrentstep","title":"var getCurrentStep: ((OpaquePointer?, UnsafeMutablePointer<Int32>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/getlength","title":"var getLength: ((OpaquePointer?) -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/gettempo","title":"var getTempo: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/gettime","title":"var getTime: ((OpaquePointer?) -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/gettrackatindex","title":"var getTrackAtIndex: ((OpaquePointer?, UInt32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/gettrackcount","title":"var getTrackCount: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/isplaying","title":"var isPlaying: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/loadmidifile","title":"var loadMIDIFile: ((OpaquePointer?, UnsafePointer<CChar>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/newsequence","title":"var newSequence: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/play","title":"var play: ((OpaquePointer?, SequenceFinishedCallback?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/setcurrentstep","title":"var setCurrentStep: ((OpaquePointer?, Int32, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/setloops","title":"var setLoops: ((OpaquePointer?, Int32, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/settempo","title":"var setTempo: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/settime","title":"var setTime: ((OpaquePointer?, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/settrackatindex","title":"var setTrackAtIndex: ((OpaquePointer?, OpaquePointer?, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_sequence\/stop","title":"var stop: ((OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_sequence","title":"playdate_sound_sequence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/init(newsignal:freesignal:getvalue:setvaluescale:setvalueoffset:)","title":"init(newSignal: ((signalStepFunc?, signalNoteOnFunc?, signalNoteOffFunc?, signalDeallocFunc?, UnsafeMutableRawPointer?) -> OpaquePointer?)!, freeSignal: ((OpaquePointer?) -> Void)!, getValue: ((OpaquePointer?) -> Float)!, setValueScale: ((OpaquePointer?, Float) -> Void)!, setValueOffset: ((OpaquePointer?, Float) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/freesignal","title":"var freeSignal: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/getvalue","title":"var getValue: ((OpaquePointer?) -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/newsignal","title":"var newSignal: ((signalStepFunc?, signalNoteOnFunc?, signalNoteOffFunc?, signalDeallocFunc?, UnsafeMutableRawPointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/setvalueoffset","title":"var setValueOffset: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_signal\/setvaluescale","title":"var setValueScale: ((OpaquePointer?, Float) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_signal","title":"playdate_sound_signal","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_source\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_source\/init(setvolume:getvolume:isplaying:setfinishcallback:)","title":"init(setVolume: ((OpaquePointer?, Float, Float) -> Void)!, getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, isPlaying: ((OpaquePointer?) -> Int32)!, setFinishCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_source\/getvolume","title":"var getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_source\/isplaying","title":"var isPlaying: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_source\/setfinishcallback","title":"var setFinishCallback: ((OpaquePointer?, ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_source\/setvolume","title":"var setVolume: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_source","title":"playdate_sound_source","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/init(newsynth:freesynth:setwaveform:setgenerator_deprecated:setsample:setattacktime:setdecaytime:setsustainlevel:setreleasetime:settranspose:setfrequencymodulator:getfrequencymodulator:setamplitudemodulator:getamplitudemodulator:getparamete-3xy31","title":"init(newSynth: (() -> OpaquePointer?)!, freeSynth: ((OpaquePointer?) -> Void)!, setWaveform: ((OpaquePointer?, SoundWaveform) -> Void)!, setGenerator_deprecated: ((OpaquePointer?, Int32, synthRenderFunc?, synthNoteOnFunc?, synthReleaseFunc?, synthSetParameterFunc?, synthDeallocFunc?, UnsafeMutableRawPointer?) -> Void)!, setSample: ((OpaquePointer?, OpaquePointer?, UInt32, UInt32) -> Void)!, setAttackTime: ((OpaquePointer?, Float) -> Void)!, setDecayTime: ((OpaquePointer?, Float) -> Void)!, setSustainLevel: ((OpaquePointer?, Float) -> Void)!, setReleaseTime: ((OpaquePointer?, Float) -> Void)!, setTranspose: ((OpaquePointer?, Float) -> Void)!, setFrequencyModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getFrequencyModulator: ((OpaquePointer?) -> OpaquePointer?)!, setAmplitudeModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!, getAmplitudeModulator: ((OpaquePointer?) -> OpaquePointer?)!, getParameterCount: ((OpaquePointer?) -> Int32)!, setParameter: ((OpaquePointer?, Int32, Float) -> Int32)!, setParameterModulator: ((OpaquePointer?, Int32, OpaquePointer?) -> Void)!, getParameterModulator: ((OpaquePointer?, Int32) -> OpaquePointer?)!, playNote: ((OpaquePointer?, Float, Float, Float, UInt32) -> Void)!, playMIDINote: ((OpaquePointer?, MIDINote, Float, Float, UInt32) -> Void)!, noteOff: ((OpaquePointer?, UInt32) -> Void)!, stop: ((OpaquePointer?) -> Void)!, setVolume: ((OpaquePointer?, Float, Float) -> Void)!, getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, isPlaying: ((OpaquePointer?) -> Int32)!, getEnvelope: ((OpaquePointer?) -> OpaquePointer?)!, setWavetable: ((OpaquePointer?, OpaquePointer?, Int32, Int32, Int32) -> Int32)!, setGenerator: ((OpaquePointer?, Int32, synthRenderFunc?, synthNoteOnFunc?, synthReleaseFunc?, synthSetParameterFunc?, synthDeallocFunc?, synthCopyUserdata?, UnsafeMutableRawPointer?) -> Void)!, copy: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/copy","title":"var copy: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/freesynth","title":"var freeSynth: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/getamplitudemodulator","title":"var getAmplitudeModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/getenvelope","title":"var getEnvelope: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/getfrequencymodulator","title":"var getFrequencyModulator: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/getparametercount","title":"var getParameterCount: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/getparametermodulator","title":"var getParameterModulator: ((OpaquePointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/getvolume","title":"var getVolume: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/isplaying","title":"var isPlaying: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/newsynth","title":"var newSynth: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/noteoff","title":"var noteOff: ((OpaquePointer?, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/playmidinote","title":"var playMIDINote: ((OpaquePointer?, MIDINote, Float, Float, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/playnote","title":"var playNote: ((OpaquePointer?, Float, Float, Float, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setamplitudemodulator","title":"var setAmplitudeModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setattacktime","title":"var setAttackTime: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setdecaytime","title":"var setDecayTime: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setfrequencymodulator","title":"var setFrequencyModulator: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setgenerator","title":"var setGenerator: ((OpaquePointer?, Int32, synthRenderFunc?, synthNoteOnFunc?, synthReleaseFunc?, synthSetParameterFunc?, synthDeallocFunc?, synthCopyUserdata?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setgenerator_deprecated","title":"var setGenerator_deprecated: ((OpaquePointer?, Int32, synthRenderFunc?, synthNoteOnFunc?, synthReleaseFunc?, synthSetParameterFunc?, synthDeallocFunc?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setparameter","title":"var setParameter: ((OpaquePointer?, Int32, Float) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setparametermodulator","title":"var setParameterModulator: ((OpaquePointer?, Int32, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setreleasetime","title":"var setReleaseTime: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setsample","title":"var setSample: ((OpaquePointer?, OpaquePointer?, UInt32, UInt32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setsustainlevel","title":"var setSustainLevel: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/settranspose","title":"var setTranspose: ((OpaquePointer?, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setvolume","title":"var setVolume: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setwaveform","title":"var setWaveform: ((OpaquePointer?, SoundWaveform) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/setwavetable","title":"var setWavetable: ((OpaquePointer?, OpaquePointer?, Int32, Int32, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_synth\/stop","title":"var stop: ((OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_synth","title":"playdate_sound_synth","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/init(newtrack:freetrack:setinstrument:getinstrument:addnoteevent:removenoteevent:clearnotes:getcontrolsignalcount:getcontrolsignal:clearcontrolevents:getpolyphony:activevoicecount:setmuted:getlength:getindexforstep:getnoteatindex:getsignalf-6r6ba","title":"init(newTrack: (() -> OpaquePointer?)!, freeTrack: ((OpaquePointer?) -> Void)!, setInstrument: ((OpaquePointer?, OpaquePointer?) -> Void)!, getInstrument: ((OpaquePointer?) -> OpaquePointer?)!, addNoteEvent: ((OpaquePointer?, UInt32, UInt32, MIDINote, Float) -> Void)!, removeNoteEvent: ((OpaquePointer?, UInt32, MIDINote) -> Void)!, clearNotes: ((OpaquePointer?) -> Void)!, getControlSignalCount: ((OpaquePointer?) -> Int32)!, getControlSignal: ((OpaquePointer?, Int32) -> OpaquePointer?)!, clearControlEvents: ((OpaquePointer?) -> Void)!, getPolyphony: ((OpaquePointer?) -> Int32)!, activeVoiceCount: ((OpaquePointer?) -> Int32)!, setMuted: ((OpaquePointer?, Int32) -> Void)!, getLength: ((OpaquePointer?) -> UInt32)!, getIndexForStep: ((OpaquePointer?, UInt32) -> Int32)!, getNoteAtIndex: ((OpaquePointer?, Int32, UnsafeMutablePointer<UInt32>?, UnsafeMutablePointer<UInt32>?, UnsafeMutablePointer<MIDINote>?, UnsafeMutablePointer<Float>?) -> Int32)!, getSignalForController: ((OpaquePointer?, Int32, Int32) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/activevoicecount","title":"var activeVoiceCount: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/addnoteevent","title":"var addNoteEvent: ((OpaquePointer?, UInt32, UInt32, MIDINote, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/clearcontrolevents","title":"var clearControlEvents: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/clearnotes","title":"var clearNotes: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/freetrack","title":"var freeTrack: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getcontrolsignal","title":"var getControlSignal: ((OpaquePointer?, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getcontrolsignalcount","title":"var getControlSignalCount: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getindexforstep","title":"var getIndexForStep: ((OpaquePointer?, UInt32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getinstrument","title":"var getInstrument: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getlength","title":"var getLength: ((OpaquePointer?) -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getnoteatindex","title":"var getNoteAtIndex: ((OpaquePointer?, Int32, UnsafeMutablePointer<UInt32>?, UnsafeMutablePointer<UInt32>?, UnsafeMutablePointer<MIDINote>?, UnsafeMutablePointer<Float>?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getpolyphony","title":"var getPolyphony: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/getsignalforcontroller","title":"var getSignalForController: ((OpaquePointer?, Int32, Int32) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/newtrack","title":"var newTrack: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/removenoteevent","title":"var removeNoteEvent: ((OpaquePointer?, UInt32, MIDINote) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/setinstrument","title":"var setInstrument: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sound_track\/setmuted","title":"var setMuted: ((OpaquePointer?, Int32) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sound_track","title":"playdate_sound_track","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/init(setalwaysredraw:adddirtyrect:drawsprites:updateanddrawsprites:newsprite:freesprite:copy:addsprite:removesprite:removesprites:removeallsprites:getspritecount:setbounds:getbounds:moveto:moveby:setimage:getimage:setsize:setzindex:getzinde-1qs15","title":"init(setAlwaysRedraw: ((Int32) -> Void)!, addDirtyRect: ((LCDRect) -> Void)!, drawSprites: (() -> Void)!, updateAndDrawSprites: (() -> Void)!, newSprite: (() -> OpaquePointer?)!, freeSprite: ((OpaquePointer?) -> Void)!, copy: ((OpaquePointer?) -> OpaquePointer?)!, addSprite: ((OpaquePointer?) -> Void)!, removeSprite: ((OpaquePointer?) -> Void)!, removeSprites: ((UnsafeMutablePointer<OpaquePointer?>?, Int32) -> Void)!, removeAllSprites: (() -> Void)!, getSpriteCount: (() -> Int32)!, setBounds: ((OpaquePointer?, PDRect) -> Void)!, getBounds: ((OpaquePointer?) -> PDRect)!, moveTo: ((OpaquePointer?, Float, Float) -> Void)!, moveBy: ((OpaquePointer?, Float, Float) -> Void)!, setImage: ((OpaquePointer?, OpaquePointer?, LCDBitmapFlip) -> Void)!, getImage: ((OpaquePointer?) -> OpaquePointer?)!, setSize: ((OpaquePointer?, Float, Float) -> Void)!, setZIndex: ((OpaquePointer?, Int16) -> Void)!, getZIndex: ((OpaquePointer?) -> Int16)!, setDrawMode: ((OpaquePointer?, LCDBitmapDrawMode) -> Void)!, setImageFlip: ((OpaquePointer?, LCDBitmapFlip) -> Void)!, getImageFlip: ((OpaquePointer?) -> LCDBitmapFlip)!, setStencil: ((OpaquePointer?, OpaquePointer?) -> Void)!, setClipRect: ((OpaquePointer?, LCDRect) -> Void)!, clearClipRect: ((OpaquePointer?) -> Void)!, setClipRectsInRange: ((LCDRect, Int32, Int32) -> Void)!, clearClipRectsInRange: ((Int32, Int32) -> Void)!, setUpdatesEnabled: ((OpaquePointer?, Int32) -> Void)!, updatesEnabled: ((OpaquePointer?) -> Int32)!, setCollisionsEnabled: ((OpaquePointer?, Int32) -> Void)!, collisionsEnabled: ((OpaquePointer?) -> Int32)!, setVisible: ((OpaquePointer?, Int32) -> Void)!, isVisible: ((OpaquePointer?) -> Int32)!, setOpaque: ((OpaquePointer?, Int32) -> Void)!, markDirty: ((OpaquePointer?) -> Void)!, setTag: ((OpaquePointer?, UInt8) -> Void)!, getTag: ((OpaquePointer?) -> UInt8)!, setIgnoresDrawOffset: ((OpaquePointer?, Int32) -> Void)!, setUpdateFunction: ((OpaquePointer?, ((OpaquePointer?) -> Void)?) -> Void)!, setDrawFunction: ((OpaquePointer?, ((OpaquePointer?, PDRect, PDRect) -> Void)?) -> Void)!, getPosition: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, resetCollisionWorld: (() -> Void)!, setCollideRect: ((OpaquePointer?, PDRect) -> Void)!, getCollideRect: ((OpaquePointer?) -> PDRect)!, clearCollideRect: ((OpaquePointer?) -> Void)!, setCollisionResponseFunction: ((OpaquePointer?, ((OpaquePointer?, OpaquePointer?) -> SpriteCollisionResponseType)?) -> Void)!, checkCollisions: ((OpaquePointer?, Float, Float, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<SpriteCollisionInfo>?)!, moveWithCollisions: ((OpaquePointer?, Float, Float, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<SpriteCollisionInfo>?)!, querySpritesAtPoint: ((Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!, querySpritesInRect: ((Float, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!, querySpritesAlongLine: ((Float, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!, querySpriteInfoAlongLine: ((Float, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<SpriteQueryInfo>?)!, overlappingSprites: ((OpaquePointer?, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!, allOverlappingSprites: ((UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!, setStencilPattern: ((OpaquePointer?, UnsafeMutablePointer<UInt8>?) -> Void)!, clearStencil: ((OpaquePointer?) -> Void)!, setUserdata: ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)!, getUserdata: ((OpaquePointer?) -> UnsafeMutableRawPointer?)!, setStencilImage: ((OpaquePointer?, OpaquePointer?, Int32) -> Void)!, setCenter: ((OpaquePointer?, Float, Float) -> Void)!, getCenter: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/adddirtyrect","title":"var addDirtyRect: ((LCDRect) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/addsprite","title":"var addSprite: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/alloverlappingsprites","title":"var allOverlappingSprites: ((UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/checkcollisions","title":"var checkCollisions: ((OpaquePointer?, Float, Float, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<SpriteCollisionInfo>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/clearcliprect","title":"var clearClipRect: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/clearcliprectsinrange","title":"var clearClipRectsInRange: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/clearcolliderect","title":"var clearCollideRect: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/clearstencil","title":"var clearStencil: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/collisionsenabled","title":"var collisionsEnabled: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/copy","title":"var copy: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/drawsprites","title":"var drawSprites: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/freesprite","title":"var freeSprite: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getbounds","title":"var getBounds: ((OpaquePointer?) -> PDRect)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getcenter","title":"var getCenter: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getcolliderect","title":"var getCollideRect: ((OpaquePointer?) -> PDRect)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getimage","title":"var getImage: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getimageflip","title":"var getImageFlip: ((OpaquePointer?) -> LCDBitmapFlip)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getposition","title":"var getPosition: ((OpaquePointer?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getspritecount","title":"var getSpriteCount: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/gettag","title":"var getTag: ((OpaquePointer?) -> UInt8)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getuserdata","title":"var getUserdata: ((OpaquePointer?) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/getzindex","title":"var getZIndex: ((OpaquePointer?) -> Int16)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/isvisible","title":"var isVisible: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/markdirty","title":"var markDirty: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/moveby","title":"var moveBy: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/moveto","title":"var moveTo: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/movewithcollisions","title":"var moveWithCollisions: ((OpaquePointer?, Float, Float, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<SpriteCollisionInfo>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/newsprite","title":"var newSprite: (() -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/overlappingsprites","title":"var overlappingSprites: ((OpaquePointer?, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/queryspriteinfoalongline","title":"var querySpriteInfoAlongLine: ((Float, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<SpriteQueryInfo>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/queryspritesalongline","title":"var querySpritesAlongLine: ((Float, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/queryspritesatpoint","title":"var querySpritesAtPoint: ((Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/queryspritesinrect","title":"var querySpritesInRect: ((Float, Float, Float, Float, UnsafeMutablePointer<Int32>?) -> UnsafeMutablePointer<OpaquePointer?>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/removeallsprites","title":"var removeAllSprites: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/removesprite","title":"var removeSprite: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/removesprites","title":"var removeSprites: ((UnsafeMutablePointer<OpaquePointer?>?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/resetcollisionworld","title":"var resetCollisionWorld: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setalwaysredraw","title":"var setAlwaysRedraw: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setbounds","title":"var setBounds: ((OpaquePointer?, PDRect) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setcenter","title":"var setCenter: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setcliprect","title":"var setClipRect: ((OpaquePointer?, LCDRect) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setcliprectsinrange","title":"var setClipRectsInRange: ((LCDRect, Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setcolliderect","title":"var setCollideRect: ((OpaquePointer?, PDRect) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setcollisionresponsefunction","title":"var setCollisionResponseFunction: ((OpaquePointer?, ((OpaquePointer?, OpaquePointer?) -> SpriteCollisionResponseType)?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setcollisionsenabled","title":"var setCollisionsEnabled: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setdrawfunction","title":"var setDrawFunction: ((OpaquePointer?, ((OpaquePointer?, PDRect, PDRect) -> Void)?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setdrawmode","title":"var setDrawMode: ((OpaquePointer?, LCDBitmapDrawMode) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setignoresdrawoffset","title":"var setIgnoresDrawOffset: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setimage","title":"var setImage: ((OpaquePointer?, OpaquePointer?, LCDBitmapFlip) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setimageflip","title":"var setImageFlip: ((OpaquePointer?, LCDBitmapFlip) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setopaque","title":"var setOpaque: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setsize","title":"var setSize: ((OpaquePointer?, Float, Float) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setstencil","title":"var setStencil: ((OpaquePointer?, OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setstencilimage","title":"var setStencilImage: ((OpaquePointer?, OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setstencilpattern","title":"var setStencilPattern: ((OpaquePointer?, UnsafeMutablePointer<UInt8>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/settag","title":"var setTag: ((OpaquePointer?, UInt8) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setupdatefunction","title":"var setUpdateFunction: ((OpaquePointer?, ((OpaquePointer?) -> Void)?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setupdatesenabled","title":"var setUpdatesEnabled: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setuserdata","title":"var setUserdata: ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setvisible","title":"var setVisible: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/setzindex","title":"var setZIndex: ((OpaquePointer?, Int16) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/updateanddrawsprites","title":"var updateAndDrawSprites: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sprite\/updatesenabled","title":"var updatesEnabled: ((OpaquePointer?) -> Int32)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sprite","title":"playdate_sprite","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sys\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_sys\/init(realloc:formatstring:logtoconsole:error:getlanguage:getcurrenttimemilliseconds:getsecondssinceepoch:drawfps:setupdatecallback:getbuttonstate:setperipheralsenabled:getaccelerometer:getcrankchange:getcrankangle:iscrankdocked:setcranksoun-6yv15","title":"init(realloc: ((UnsafeMutableRawPointer?, Int) -> UnsafeMutableRawPointer?)!, formatString: OpaquePointer!, logToConsole: OpaquePointer!, error: OpaquePointer!, getLanguage: (() -> PDLanguage)!, getCurrentTimeMilliseconds: (() -> UInt32)!, getSecondsSinceEpoch: ((UnsafeMutablePointer<UInt32>?) -> UInt32)!, drawFPS: ((Int32, Int32) -> Void)!, setUpdateCallback: ((((UnsafeMutableRawPointer?) -> Int32)?, UnsafeMutableRawPointer?) -> Void)!, getButtonState: ((UnsafeMutablePointer<PDButtons>?, UnsafeMutablePointer<PDButtons>?, UnsafeMutablePointer<PDButtons>?) -> Void)!, setPeripheralsEnabled: ((PDPeripherals) -> Void)!, getAccelerometer: ((UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!, getCrankChange: (() -> Float)!, getCrankAngle: (() -> Float)!, isCrankDocked: (() -> Int32)!, setCrankSoundsDisabled: ((Int32) -> Int32)!, getFlipped: (() -> Int32)!, setAutoLockDisabled: ((Int32) -> Void)!, setMenuImage: ((OpaquePointer?, Int32) -> Void)!, addMenuItem: ((UnsafePointer<CChar>?, ((UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!, addCheckmarkMenuItem: ((UnsafePointer<CChar>?, Int32, ((UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!, addOptionsMenuItem: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?, Int32, ((UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!, removeAllMenuItems: (() -> Void)!, removeMenuItem: ((OpaquePointer?) -> Void)!, getMenuItemValue: ((OpaquePointer?) -> Int32)!, setMenuItemValue: ((OpaquePointer?, Int32) -> Void)!, getMenuItemTitle: ((OpaquePointer?) -> UnsafePointer<CChar>?)!, setMenuItemTitle: ((OpaquePointer?, UnsafePointer<CChar>?) -> Void)!, getMenuItemUserdata: ((OpaquePointer?) -> UnsafeMutableRawPointer?)!, setMenuItemUserdata: ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)!, getReduceFlashing: (() -> Int32)!, getElapsedTime: (() -> Float)!, resetElapsedTime: (() -> Void)!, getBatteryPercentage: (() -> Float)!, getBatteryVoltage: (() -> Float)!, getTimezoneOffset: (() -> Int32)!, shouldDisplay24HourTime: (() -> Int32)!, convertEpochToDateTime: ((UInt32, UnsafeMutablePointer<PDDateTime>?) -> Void)!, convertDateTimeToEpoch: ((UnsafeMutablePointer<PDDateTime>?) -> UInt32)!, clearICache: (() -> Void)!, setButtonCallback: ((((PDButtons, Int32, UInt32, UnsafeMutableRawPointer?) -> Int32)?, UnsafeMutableRawPointer?, Int32) -> Void)!, setSerialMessageCallback: ((((UnsafePointer<CChar>?) -> Void)?) -> Void)!, vaFormatString: ((UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>?, UnsafePointer<CChar>?, CVaListPointer?) -> Int32)!, parseString: OpaquePointer!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_sys\/addcheckmarkmenuitem","title":"var addCheckmarkMenuItem: ((UnsafePointer<CChar>?, Int32, ((UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/addmenuitem","title":"var addMenuItem: ((UnsafePointer<CChar>?, ((UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/addoptionsmenuitem","title":"var addOptionsMenuItem: ((UnsafePointer<CChar>?, UnsafeMutablePointer<UnsafePointer<CChar>?>?, Int32, ((UnsafeMutableRawPointer?) -> Void)?, UnsafeMutableRawPointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/clearicache","title":"var clearICache: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/convertdatetimetoepoch","title":"var convertDateTimeToEpoch: ((UnsafeMutablePointer<PDDateTime>?) -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/convertepochtodatetime","title":"var convertEpochToDateTime: ((UInt32, UnsafeMutablePointer<PDDateTime>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/drawfps","title":"var drawFPS: ((Int32, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/error","title":"var error: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/formatstring","title":"var formatString: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getaccelerometer","title":"var getAccelerometer: ((UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Float>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getbatterypercentage","title":"var getBatteryPercentage: (() -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getbatteryvoltage","title":"var getBatteryVoltage: (() -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getbuttonstate","title":"var getButtonState: ((UnsafeMutablePointer<PDButtons>?, UnsafeMutablePointer<PDButtons>?, UnsafeMutablePointer<PDButtons>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getcrankangle","title":"var getCrankAngle: (() -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getcrankchange","title":"var getCrankChange: (() -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getcurrenttimemilliseconds","title":"var getCurrentTimeMilliseconds: (() -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getelapsedtime","title":"var getElapsedTime: (() -> Float)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getflipped","title":"var getFlipped: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getlanguage","title":"var getLanguage: (() -> PDLanguage)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getmenuitemtitle","title":"var getMenuItemTitle: ((OpaquePointer?) -> UnsafePointer<CChar>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getmenuitemuserdata","title":"var getMenuItemUserdata: ((OpaquePointer?) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getmenuitemvalue","title":"var getMenuItemValue: ((OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getreduceflashing","title":"var getReduceFlashing: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/getsecondssinceepoch","title":"var getSecondsSinceEpoch: ((UnsafeMutablePointer<UInt32>?) -> UInt32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/gettimezoneoffset","title":"var getTimezoneOffset: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/iscrankdocked","title":"var isCrankDocked: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/logtoconsole","title":"var logToConsole: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/parsestring","title":"var parseString: OpaquePointer!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/realloc","title":"var realloc: ((UnsafeMutableRawPointer?, Int) -> UnsafeMutableRawPointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/removeallmenuitems","title":"var removeAllMenuItems: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/removemenuitem","title":"var removeMenuItem: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/resetelapsedtime","title":"var resetElapsedTime: (() -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setautolockdisabled","title":"var setAutoLockDisabled: ((Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setbuttoncallback","title":"var setButtonCallback: ((((PDButtons, Int32, UInt32, UnsafeMutableRawPointer?) -> Int32)?, UnsafeMutableRawPointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setcranksoundsdisabled","title":"var setCrankSoundsDisabled: ((Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setmenuimage","title":"var setMenuImage: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setmenuitemtitle","title":"var setMenuItemTitle: ((OpaquePointer?, UnsafePointer<CChar>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setmenuitemuserdata","title":"var setMenuItemUserdata: ((OpaquePointer?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setmenuitemvalue","title":"var setMenuItemValue: ((OpaquePointer?, Int32) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setperipheralsenabled","title":"var setPeripheralsEnabled: ((PDPeripherals) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setserialmessagecallback","title":"var setSerialMessageCallback: ((((UnsafePointer<CChar>?) -> Void)?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/setupdatecallback","title":"var setUpdateCallback: ((((UnsafeMutableRawPointer?) -> Int32)?, UnsafeMutableRawPointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/shoulddisplay24hourtime","title":"var shouldDisplay24HourTime: (() -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_sys\/vaformatstring","title":"var vaFormatString: ((UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>?, UnsafePointer<CChar>?, CVaListPointer?) -> Int32)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_sys","title":"playdate_sys","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_video\/init()","title":"init()","type":"init"},{"path":"\/documentation\/playdatekit\/playdate_video\/init(loadvideo:freeplayer:setcontext:usescreencontext:renderframe:geterror:getinfo:getcontext:)","title":"init(loadVideo: ((UnsafePointer<CChar>?) -> OpaquePointer?)!, freePlayer: ((OpaquePointer?) -> Void)!, setContext: ((OpaquePointer?, OpaquePointer?) -> Int32)!, useScreenContext: ((OpaquePointer?) -> Void)!, renderFrame: ((OpaquePointer?, Int32) -> Int32)!, getError: ((OpaquePointer?) -> UnsafePointer<CChar>?)!, getInfo: ((OpaquePointer?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?) -> Void)!, getContext: ((OpaquePointer?) -> OpaquePointer?)!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate_video\/freeplayer","title":"var freePlayer: ((OpaquePointer?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/getcontext","title":"var getContext: ((OpaquePointer?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/geterror","title":"var getError: ((OpaquePointer?) -> UnsafePointer<CChar>?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/getinfo","title":"var getInfo: ((OpaquePointer?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Float>?, UnsafeMutablePointer<Int32>?, UnsafeMutablePointer<Int32>?) -> Void)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/loadvideo","title":"var loadVideo: ((UnsafePointer<CChar>?) -> OpaquePointer?)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/renderframe","title":"var renderFrame: ((OpaquePointer?, Int32) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/setcontext","title":"var setContext: ((OpaquePointer?, OpaquePointer?) -> Int32)!","type":"property"},{"path":"\/documentation\/playdatekit\/playdate_video\/usescreencontext","title":"var useScreenContext: ((OpaquePointer?) -> Void)!","type":"property"}],"path":"\/documentation\/playdatekit\/playdate_video","title":"playdate_video","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/audio_frames_per_cycle","title":"var AUDIO_FRAMES_PER_CYCLE: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/domain","title":"var DOMAIN: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/exit_failure","title":"var EXIT_FAILURE: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/exit_success","title":"var EXIT_SUCCESS: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/fp_ilogbnan","title":"var FP_ILOGBNAN: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/fp_infinite","title":"var FP_INFINITE: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/fp_nan","title":"var FP_NAN: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/fp_normal","title":"var FP_NORMAL: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/fp_subnormal","title":"var FP_SUBNORMAL: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/fp_zero","title":"var FP_ZERO: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/have_initfini_array","title":"var HAVE_INITFINI_ARRAY: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int16_max","title":"var INT16_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int32_max","title":"var INT32_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int64_max","title":"var INT64_MAX: Int64","type":"var"},{"path":"\/documentation\/playdatekit\/int8_max","title":"var INT8_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/intmax_max","title":"var INTMAX_MAX: Int","type":"var"},{"path":"\/documentation\/playdatekit\/intptr_max","title":"var INTPTR_MAX: Int","type":"var"},{"path":"\/documentation\/playdatekit\/int_fast16_max","title":"var INT_FAST16_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int_fast32_max","title":"var INT_FAST32_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int_fast64_max","title":"var INT_FAST64_MAX: Int64","type":"var"},{"path":"\/documentation\/playdatekit\/int_fast8_max","title":"var INT_FAST8_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int_least16_max","title":"var INT_LEAST16_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int_least32_max","title":"var INT_LEAST32_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/int_least64_max","title":"var INT_LEAST64_MAX: Int64","type":"var"},{"path":"\/documentation\/playdatekit\/int_least8_max","title":"var INT_LEAST8_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/lcd_columns","title":"var LCD_COLUMNS: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/lcd_rows","title":"var LCD_ROWS: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/lcd_rowsize","title":"var LCD_ROWSIZE: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/malloc_alignment","title":"var MALLOC_ALIGNMENT: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/math_errexcept","title":"var MATH_ERREXCEPT: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/math_errno","title":"var MATH_ERRNO: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/maxfloat","title":"var MAXFLOAT: Float","type":"var"},{"path":"\/documentation\/playdatekit\/m_1_pi","title":"var M_1_PI: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_2_pi","title":"var M_2_PI: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_2_sqrtpi","title":"var M_2_SQRTPI: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_3pi_4","title":"var M_3PI_4: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_e","title":"var M_E: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_invln2","title":"var M_INVLN2: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_ivln10","title":"var M_IVLN10: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_ln10","title":"var M_LN10: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_ln2","title":"var M_LN2: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_ln2hi","title":"var M_LN2HI: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_ln2lo","title":"var M_LN2LO: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_log10e","title":"var M_LOG10E: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_log2e","title":"var M_LOG2E: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_log2_e","title":"var M_LOG2_E: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_pi","title":"var M_PI: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_pi_2","title":"var M_PI_2: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_pi_4","title":"var M_PI_4: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_sqrt1_2","title":"var M_SQRT1_2: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_sqrt2","title":"var M_SQRT2: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_sqrt3","title":"var M_SQRT3: Double","type":"var"},{"path":"\/documentation\/playdatekit\/m_sqrtpi","title":"var M_SQRTPI: Double","type":"var"},{"path":"\/documentation\/playdatekit\/note_c4","title":"var NOTE_C4: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/overflow","title":"var OVERFLOW: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/ploss","title":"var PLOSS: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/ptrdiff_max","title":"var PTRDIFF_MAX: Int","type":"var"},{"path":"\/documentation\/playdatekit\/rand_max","title":"var RAND_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/seek_cur","title":"var SEEK_CUR: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/seek_end","title":"var SEEK_END: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/seek_set","title":"var SEEK_SET: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/sing","title":"var SING: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/size_max","title":"var SIZE_MAX: UInt","type":"var"},{"path":"\/documentation\/playdatekit\/tloss","title":"var TLOSS: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/uint16_max","title":"var UINT16_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/uint32_max","title":"var UINT32_MAX: UInt32","type":"var"},{"path":"\/documentation\/playdatekit\/uint64_max","title":"var UINT64_MAX: UInt64","type":"var"},{"path":"\/documentation\/playdatekit\/uint8_max","title":"var UINT8_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/uintmax_max","title":"var UINTMAX_MAX: UInt","type":"var"},{"path":"\/documentation\/playdatekit\/uintptr_max","title":"var UINTPTR_MAX: UInt","type":"var"},{"path":"\/documentation\/playdatekit\/uint_fast16_max","title":"var UINT_FAST16_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/uint_fast32_max","title":"var UINT_FAST32_MAX: UInt32","type":"var"},{"path":"\/documentation\/playdatekit\/uint_fast64_max","title":"var UINT_FAST64_MAX: UInt64","type":"var"},{"path":"\/documentation\/playdatekit\/uint_fast8_max","title":"var UINT_FAST8_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/uint_least16_max","title":"var UINT_LEAST16_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/uint_least32_max","title":"var UINT_LEAST32_MAX: UInt32","type":"var"},{"path":"\/documentation\/playdatekit\/uint_least64_max","title":"var UINT_LEAST64_MAX: UInt64","type":"var"},{"path":"\/documentation\/playdatekit\/uint_least8_max","title":"var UINT_LEAST8_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/underflow","title":"var UNDERFLOW: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/wchar_max","title":"var WCHAR_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/wint_max","title":"var WINT_MAX: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/wint_min","title":"var WINT_MIN: UInt32","type":"var"},{"path":"\/documentation\/playdatekit\/kfloat","title":"var kFloat: l_valtype","type":"var"},{"path":"\/documentation\/playdatekit\/kint","title":"var kInt: l_valtype","type":"var"},{"path":"\/documentation\/playdatekit\/kstr","title":"var kStr: l_valtype","type":"var"},{"path":"\/documentation\/playdatekit\/math_errhandling","title":"var math_errhandling: Int32","type":"var"},{"path":"\/documentation\/playdatekit\/suboptarg","title":"var suboptarg: UnsafeMutablePointer<CChar>!","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdmakerect(_:_:_:_:)","title":"func LCDMakeRect(Int32, Int32, Int32, Int32) -> LCDRect","type":"func"},{"path":"\/documentation\/playdatekit\/lcdrect_translate(_:_:_:)","title":"func LCDRect_translate(LCDRect, Int32, Int32) -> LCDRect","type":"func"},{"path":"\/documentation\/playdatekit\/pdrectmake(_:_:_:_:)","title":"func PDRectMake(Float, Float, Float, Float) -> PDRect","type":"func"},{"path":"\/documentation\/playdatekit\/soundformat_bytesperframe(_:)","title":"func SoundFormat_bytesPerFrame(SoundFormat) -> UInt32","type":"func"},{"path":"\/documentation\/playdatekit\/abort()","title":"func abort() -> Never","type":"func"},{"path":"\/documentation\/playdatekit\/abs(_:)","title":"func abs(Int32) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/acos(_:)","title":"func acos(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/acosf(_:)","title":"func acosf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/acosh(_:)","title":"func acosh(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/acoshf(_:)","title":"func acoshf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/acoshl(_:)","title":"func acoshl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/acosl(_:)","title":"func acosl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/aligned_alloc(_:_:)","title":"func aligned_alloc(Int, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/arc4random()","title":"func arc4random() -> __uint32_t","type":"func"},{"path":"\/documentation\/playdatekit\/arc4random_buf(_:_:)","title":"func arc4random_buf(UnsafeMutableRawPointer!, Int)","type":"func"},{"path":"\/documentation\/playdatekit\/arc4random_uniform(_:)","title":"func arc4random_uniform(__uint32_t) -> __uint32_t","type":"func"},{"path":"\/documentation\/playdatekit\/asin(_:)","title":"func asin(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/asinf(_:)","title":"func asinf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/asinh(_:)","title":"func asinh(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/asinhf(_:)","title":"func asinhf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/asinhl(_:)","title":"func asinhl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/asinl(_:)","title":"func asinl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/at_quick_exit(_:)","title":"func at_quick_exit((() -> Void)!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/atan(_:)","title":"func atan(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/atan2(_:_:)","title":"func atan2(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/atan2f(_:_:)","title":"func atan2f(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/atan2l(_:_:)","title":"func atan2l(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/atanf(_:)","title":"func atanf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/atanh(_:)","title":"func atanh(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/atanhf(_:)","title":"func atanhf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/atanhl(_:)","title":"func atanhl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/atanl(_:)","title":"func atanl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/bcmp(_:_:_:)","title":"func bcmp(UnsafeRawPointer!, UnsafeRawPointer!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/bcopy(_:_:_:)","title":"func bcopy(UnsafeRawPointer!, UnsafeMutableRawPointer!, Int)","type":"func"},{"path":"\/documentation\/playdatekit\/bzero(_:_:)","title":"func bzero(UnsafeMutableRawPointer!, Int)","type":"func"},{"path":"\/documentation\/playdatekit\/calloc(_:_:)","title":"func calloc(Int, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/cbrt(_:)","title":"func cbrt(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/cbrtf(_:)","title":"func cbrtf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/cbrtl(_:)","title":"func cbrtl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/ceil(_:)","title":"func ceil(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/ceilf(_:)","title":"func ceilf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/ceill(_:)","title":"func ceill(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/cfree(_:)","title":"func cfree(UnsafeMutableRawPointer!)","type":"func"},{"path":"\/documentation\/playdatekit\/copysign(_:_:)","title":"func copysign(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/copysignf(_:_:)","title":"func copysignf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/copysignl(_:_:)","title":"func copysignl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/cos(_:)","title":"func cos(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/cosf(_:)","title":"func cosf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/cosh(_:)","title":"func cosh(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/coshf(_:)","title":"func coshf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/coshl(_:)","title":"func coshl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/cosl(_:)","title":"func cosl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/drand48()","title":"func drand48() -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/drem(_:_:)","title":"func drem(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/dremf(_:_:)","title":"func dremf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/erand48(_:)","title":"func erand48(UnsafeMutablePointer<UInt16>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/erf(_:)","title":"func erf(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/erfc(_:)","title":"func erfc(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/erfcf(_:)","title":"func erfcf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/erfcl(_:)","title":"func erfcl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/erff(_:)","title":"func erff(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/erfl(_:)","title":"func erfl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/eventhandler(_:_:_:)","title":"func eventHandler(UnsafeMutablePointer<PlaydateAPI>!, PDSystemEvent, UInt32) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/exp(_:)","title":"func exp(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/exp2(_:)","title":"func exp2(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/exp2f(_:)","title":"func exp2f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/exp2l(_:)","title":"func exp2l(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/expf(_:)","title":"func expf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/expl(_:)","title":"func expl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/explicit_bzero(_:_:)","title":"func explicit_bzero(UnsafeMutableRawPointer!, Int)","type":"func"},{"path":"\/documentation\/playdatekit\/expm1(_:)","title":"func expm1(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/expm1f(_:)","title":"func expm1f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/expm1l(_:)","title":"func expm1l(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fabs(_:)","title":"func fabs(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fabsf(_:)","title":"func fabsf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/fabsl(_:)","title":"func fabsl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fdim(_:_:)","title":"func fdim(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fdimf(_:_:)","title":"func fdimf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/fdiml(_:_:)","title":"func fdiml(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/ffs(_:)","title":"func ffs(Int32) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/ffsl(_:)","title":"func ffsl(Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/ffsll(_:)","title":"func ffsll(Int64) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/finite(_:)","title":"func finite(Double) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/finitef(_:)","title":"func finitef(Float) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/finitel(_:)","title":"func finitel(Double) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/floor(_:)","title":"func floor(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/floorf(_:)","title":"func floorf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/floorl(_:)","title":"func floorl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fls(_:)","title":"func fls(Int32) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/flsl(_:)","title":"func flsl(Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/flsll(_:)","title":"func flsll(Int64) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/fma(_:_:_:)","title":"func fma(Double, Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fmaf(_:_:_:)","title":"func fmaf(Float, Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/fmal(_:_:_:)","title":"func fmal(Double, Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fmax(_:_:)","title":"func fmax(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fmaxf(_:_:)","title":"func fmaxf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/fmaxl(_:_:)","title":"func fmaxl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fmin(_:_:)","title":"func fmin(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fminf(_:_:)","title":"func fminf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/fminl(_:_:)","title":"func fminl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fmod(_:_:)","title":"func fmod(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/fmodf(_:_:)","title":"func fmodf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/fmodl(_:_:)","title":"func fmodl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/free(_:)","title":"func free(UnsafeMutableRawPointer?)","type":"func"},{"path":"\/documentation\/playdatekit\/frexp(_:_:)","title":"func frexp(Double, UnsafeMutablePointer<Int32>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/frexpf(_:_:)","title":"func frexpf(Float, UnsafeMutablePointer<Int32>!) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/frexpl(_:_:)","title":"func frexpl(Double, UnsafeMutablePointer<Int32>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/gamma(_:)","title":"func gamma(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/gamma_r(_:_:)","title":"func gamma_r(Double, UnsafeMutablePointer<Int32>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/gammaf(_:)","title":"func gammaf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/gammaf_r(_:_:)","title":"func gammaf_r(Float, UnsafeMutablePointer<Int32>!) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/getsubopt(_:_:_:)","title":"func getsubopt(UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, UnsafePointer<UnsafeMutablePointer<CChar>?>!, UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/hypot(_:_:)","title":"func hypot(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/hypotf(_:_:)","title":"func hypotf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/hypotl(_:_:)","title":"func hypotl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/ilogb(_:)","title":"func ilogb(Double) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/ilogbf(_:)","title":"func ilogbf(Float) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/ilogbl(_:)","title":"func ilogbl(Double) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/index(_:_:)","title":"func index(UnsafePointer<CChar>!, Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/infinity()","title":"func infinity() -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/infinityf()","title":"func infinityf() -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/initstate(_:_:_:)","title":"func initstate(UInt32, UnsafeMutablePointer<CChar>!, Int) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/isinf(_:)","title":"func isinf(Double) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/isinff(_:)","title":"func isinff(Float) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/isnan(_:)","title":"func isnan(Double) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/isnanf(_:)","title":"func isnanf(Float) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/itoa(_:_:_:)","title":"func itoa(Int32, UnsafeMutablePointer<CChar>!, Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/j0(_:)","title":"func j0(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/j0f(_:)","title":"func j0f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/j1(_:)","title":"func j1(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/j1f(_:)","title":"func j1f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/jn(_:_:)","title":"func jn(Int32, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/jnf(_:_:)","title":"func jnf(Int32, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/jrand48(_:)","title":"func jrand48(UnsafeMutablePointer<UInt16>!) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/json_boolvalue(_:)","title":"func json_boolValue(json_value) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/json_floatvalue(_:)","title":"func json_floatValue(json_value) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/json_intvalue(_:)","title":"func json_intValue(json_value) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/json_setarraydecode(_:_:_:_:)","title":"func json_setArrayDecode(UnsafeMutablePointer<json_decoder>!, ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> Void)!, ((UnsafeMutablePointer<json_decoder>?, Int32, json_value) -> Void)!, ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> UnsafeMutableRawPointer?)!)","type":"func"},{"path":"\/documentation\/playdatekit\/json_settabledecode(_:_:_:_:)","title":"func json_setTableDecode(UnsafeMutablePointer<json_decoder>!, ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> Void)!, ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value) -> Void)!, ((UnsafeMutablePointer<json_decoder>?, UnsafePointer<CChar>?, json_value_type) -> UnsafeMutableRawPointer?)!)","type":"func"},{"path":"\/documentation\/playdatekit\/json_stringvalue(_:)","title":"func json_stringValue(json_value) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/labs(_:)","title":"func labs(Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lcong48(_:)","title":"func lcong48(UnsafeMutablePointer<UInt16>!)","type":"func"},{"path":"\/documentation\/playdatekit\/ldexp(_:_:)","title":"func ldexp(Double, Int32) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/ldexpf(_:_:)","title":"func ldexpf(Float, Int32) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/ldexpl(_:_:)","title":"func ldexpl(Double, Int32) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/lgamma(_:)","title":"func lgamma(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/lgamma_r(_:_:)","title":"func lgamma_r(Double, UnsafeMutablePointer<Int32>) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/lgammaf(_:)","title":"func lgammaf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/lgammaf_r(_:_:)","title":"func lgammaf_r(Float, UnsafeMutablePointer<Int32>) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/lgammal(_:)","title":"func lgammal(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/llabs(_:)","title":"func llabs(Int64) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/llrint(_:)","title":"func llrint(Double) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/llrintf(_:)","title":"func llrintf(Float) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/llrintl(_:)","title":"func llrintl(Double) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/llround(_:)","title":"func llround(Double) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/llroundf(_:)","title":"func llroundf(Float) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/llroundl(_:)","title":"func llroundl(Double) -> Int64","type":"func"},{"path":"\/documentation\/playdatekit\/log(_:)","title":"func log(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/log10(_:)","title":"func log10(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/log10f(_:)","title":"func log10f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/log10l(_:)","title":"func log10l(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/log1p(_:)","title":"func log1p(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/log1pf(_:)","title":"func log1pf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/log1pl(_:)","title":"func log1pl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/log2(_:)","title":"func log2(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/log2f(_:)","title":"func log2f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/log2l(_:)","title":"func log2l(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/logb(_:)","title":"func logb(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/logbf(_:)","title":"func logbf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/logbl(_:)","title":"func logbl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/logf(_:)","title":"func logf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/logl(_:)","title":"func logl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/lrand48()","title":"func lrand48() -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lrint(_:)","title":"func lrint(Double) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lrintf(_:)","title":"func lrintf(Float) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lrintl(_:)","title":"func lrintl(Double) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lround(_:)","title":"func lround(Double) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lroundf(_:)","title":"func lroundf(Float) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/lroundl(_:)","title":"func lroundl(Double) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/malloc(_:)","title":"func malloc(Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/matherr(_:)","title":"func matherr(UnsafeMutablePointer<exception>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/mblen(_:_:)","title":"func mblen(UnsafePointer<CChar>!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/mbstowcs(_:_:_:)","title":"func mbstowcs(UnsafeMutablePointer<wchar_t>!, UnsafePointer<CChar>!, Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/mbtowc(_:_:_:)","title":"func mbtowc(UnsafeMutablePointer<wchar_t>!, UnsafePointer<CChar>!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/memccpy(_:_:_:_:)","title":"func memccpy(UnsafeMutableRawPointer!, UnsafeRawPointer!, Int32, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/memchr(_:_:_:)","title":"func memchr(UnsafeRawPointer!, Int32, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/memcmp(_:_:_:)","title":"func memcmp(UnsafeRawPointer!, UnsafeRawPointer!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/memcpy(_:_:_:)","title":"func memcpy(UnsafeMutableRawPointer!, UnsafeRawPointer!, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/memmove(_:_:_:)","title":"func memmove(UnsafeMutableRawPointer!, UnsafeRawPointer!, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/memset(_:_:_:)","title":"func memset(UnsafeMutableRawPointer!, Int32, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/mkdtemp(_:)","title":"func mkdtemp(UnsafeMutablePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/mkstemp(_:)","title":"func mkstemp(UnsafeMutablePointer<CChar>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/mkstemps(_:_:)","title":"func mkstemps(UnsafeMutablePointer<CChar>!, Int32) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/mktemp(_:)","title":"func mktemp(UnsafeMutablePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/modf(_:_:)","title":"func modf(Double, UnsafeMutablePointer<Double>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/modff(_:_:)","title":"func modff(Float, UnsafeMutablePointer<Float>!) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/modfl(_:_:)","title":"func modfl(Double, UnsafeMutablePointer<Double>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/mrand48()","title":"func mrand48() -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/nan(_:)","title":"func nan(UnsafePointer<CChar>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nanf(_:)","title":"func nanf(UnsafePointer<CChar>!) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/nanl(_:)","title":"func nanl(UnsafePointer<CChar>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nearbyint(_:)","title":"func nearbyint(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nearbyintf(_:)","title":"func nearbyintf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/nearbyintl(_:)","title":"func nearbyintl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nextafter(_:_:)","title":"func nextafter(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nextafterf(_:_:)","title":"func nextafterf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/nextafterl(_:_:)","title":"func nextafterl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nexttoward(_:_:)","title":"func nexttoward(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nexttowardf(_:_:)","title":"func nexttowardf(Float, Double) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/nexttowardl(_:_:)","title":"func nexttowardl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/nrand48(_:)","title":"func nrand48(UnsafeMutablePointer<UInt16>!) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/pd_frequencytonote(_:)","title":"func pd_frequencyToNote(Float) -> MIDINote","type":"func"},{"path":"\/documentation\/playdatekit\/pd_notetofrequency(_:)","title":"func pd_noteToFrequency(MIDINote) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/posix_memalign(_:_:_:)","title":"func posix_memalign(UnsafeMutablePointer<UnsafeMutableRawPointer?>, Int, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/pow(_:_:)","title":"func pow(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/powf(_:_:)","title":"func powf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/powl(_:_:)","title":"func powl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/quick_exit(_:)","title":"func quick_exit(Int32) -> Never","type":"func"},{"path":"\/documentation\/playdatekit\/rand()","title":"func rand() -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/random()","title":"func random() -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/realloc(_:_:)","title":"func realloc(UnsafeMutableRawPointer!, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/reallocarray(_:_:_:)","title":"func reallocarray(UnsafeMutableRawPointer!, Int, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/reallocf(_:_:)","title":"func reallocf(UnsafeMutableRawPointer!, Int) -> UnsafeMutableRawPointer!","type":"func"},{"path":"\/documentation\/playdatekit\/realpath(_:_:)","title":"func realpath(UnsafePointer<CChar>!, UnsafeMutablePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/remainder(_:_:)","title":"func remainder(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/remainderf(_:_:)","title":"func remainderf(Float, Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/remainderl(_:_:)","title":"func remainderl(Double, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/remquo(_:_:_:)","title":"func remquo(Double, Double, UnsafeMutablePointer<Int32>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/remquof(_:_:_:)","title":"func remquof(Float, Float, UnsafeMutablePointer<Int32>!) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/remquol(_:_:_:)","title":"func remquol(Double, Double, UnsafeMutablePointer<Int32>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/rindex(_:_:)","title":"func rindex(UnsafePointer<CChar>!, Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/rint(_:)","title":"func rint(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/rintf(_:)","title":"func rintf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/rintl(_:)","title":"func rintl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/round(_:)","title":"func round(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/roundf(_:)","title":"func roundf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/roundl(_:)","title":"func roundl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/rpmatch(_:)","title":"func rpmatch(UnsafePointer<CChar>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/scalbln(_:_:)","title":"func scalbln(Double, Int) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/scalblnf(_:_:)","title":"func scalblnf(Float, Int) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/scalblnl(_:_:)","title":"func scalblnl(Double, Int) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/scalbn(_:_:)","title":"func scalbn(Double, Int32) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/scalbnf(_:_:)","title":"func scalbnf(Float, Int32) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/scalbnl(_:_:)","title":"func scalbnl(Double, Int32) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/seed48(_:)","title":"func seed48(UnsafeMutablePointer<UInt16>!) -> UnsafeMutablePointer<UInt16>!","type":"func"},{"path":"\/documentation\/playdatekit\/setstate(_:)","title":"func setstate(UnsafeMutablePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/sin(_:)","title":"func sin(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/sinf(_:)","title":"func sinf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/sinh(_:)","title":"func sinh(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/sinhf(_:)","title":"func sinhf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/sinhl(_:)","title":"func sinhl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/sinl(_:)","title":"func sinl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/sqrt(_:)","title":"func sqrt(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/sqrtf(_:)","title":"func sqrtf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/sqrtl(_:)","title":"func sqrtl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/srand48(_:)","title":"func srand48(Int)","type":"func"},{"path":"\/documentation\/playdatekit\/srandom(_:)","title":"func srandom(UInt32)","type":"func"},{"path":"\/documentation\/playdatekit\/stpcpy(_:_:)","title":"func stpcpy(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/stpncpy(_:_:_:)","title":"func stpncpy(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strcasecmp(_:_:)","title":"func strcasecmp(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strcasecmp_l(_:_:_:)","title":"func strcasecmp_l(UnsafePointer<CChar>!, UnsafePointer<CChar>!, locale_t!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strcat(_:_:)","title":"func strcat(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strchr(_:_:)","title":"func strchr(UnsafePointer<CChar>!, Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strcmp(_:_:)","title":"func strcmp(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strcoll(_:_:)","title":"func strcoll(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strcoll_l(_:_:_:)","title":"func strcoll_l(UnsafePointer<CChar>!, UnsafePointer<CChar>!, locale_t!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strcpy(_:_:)","title":"func strcpy(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strcspn(_:_:)","title":"func strcspn(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strdup(_:)","title":"func strdup(UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strerror(_:)","title":"func strerror(Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strerror_l(_:_:)","title":"func strerror_l(Int32, locale_t!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strerror_r(_:_:_:)","title":"func strerror_r(Int32, UnsafeMutablePointer<CChar>!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strlcat(_:_:_:)","title":"func strlcat(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strlcpy(_:_:_:)","title":"func strlcpy(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strlen(_:)","title":"func strlen(UnsafePointer<CChar>) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strlwr(_:)","title":"func strlwr(UnsafeMutablePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strncasecmp(_:_:_:)","title":"func strncasecmp(UnsafePointer<CChar>!, UnsafePointer<CChar>!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strncasecmp_l(_:_:_:_:)","title":"func strncasecmp_l(UnsafePointer<CChar>!, UnsafePointer<CChar>!, Int, locale_t!) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strncat(_:_:_:)","title":"func strncat(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strncmp(_:_:_:)","title":"func strncmp(UnsafePointer<CChar>!, UnsafePointer<CChar>!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/strncpy(_:_:_:)","title":"func strncpy(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strndup(_:_:)","title":"func strndup(UnsafePointer<CChar>!, Int) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strnlen(_:_:)","title":"func strnlen(UnsafePointer<CChar>!, Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strnstr(_:_:_:)","title":"func strnstr(UnsafePointer<CChar>!, UnsafePointer<CChar>!, Int) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strpbrk(_:_:)","title":"func strpbrk(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strrchr(_:_:)","title":"func strrchr(UnsafePointer<CChar>!, Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strsep(_:_:)","title":"func strsep(UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strspn(_:_:)","title":"func strspn(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strstr(_:_:)","title":"func strstr(UnsafePointer<CChar>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strtok(_:_:)","title":"func strtok(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strtok_r(_:_:_:)","title":"func strtok_r(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strtold(_:_:)","title":"func strtold(UnsafePointer<CChar>!, UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/strupr(_:)","title":"func strupr(UnsafeMutablePointer<CChar>!) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/strxfrm(_:_:_:)","title":"func strxfrm(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/strxfrm_l(_:_:_:_:)","title":"func strxfrm_l(UnsafeMutablePointer<CChar>!, UnsafePointer<CChar>!, Int, locale_t!) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/tan(_:)","title":"func tan(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/tanf(_:)","title":"func tanf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/tanh(_:)","title":"func tanh(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/tanhf(_:)","title":"func tanhf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/tanhl(_:)","title":"func tanhl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/tanl(_:)","title":"func tanl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/tgamma(_:)","title":"func tgamma(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/tgammaf(_:)","title":"func tgammaf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/tgammal(_:)","title":"func tgammal(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/timingsafe_bcmp(_:_:_:)","title":"func timingsafe_bcmp(UnsafeRawPointer!, UnsafeRawPointer!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/timingsafe_memcmp(_:_:_:)","title":"func timingsafe_memcmp(UnsafeRawPointer!, UnsafeRawPointer!, Int) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/trunc(_:)","title":"func trunc(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/truncf(_:)","title":"func truncf(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/truncl(_:)","title":"func truncl(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/utoa(_:_:_:)","title":"func utoa(UInt32, UnsafeMutablePointer<CChar>!, Int32) -> UnsafeMutablePointer<CChar>!","type":"func"},{"path":"\/documentation\/playdatekit\/wcstombs(_:_:_:)","title":"func wcstombs(UnsafeMutablePointer<CChar>!, UnsafePointer<wchar_t>!, Int) -> Int","type":"func"},{"path":"\/documentation\/playdatekit\/wctomb(_:_:)","title":"func wctomb(UnsafeMutablePointer<CChar>!, wchar_t) -> Int32","type":"func"},{"path":"\/documentation\/playdatekit\/y0(_:)","title":"func y0(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/y0f(_:)","title":"func y0f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/y1(_:)","title":"func y1(Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/y1f(_:)","title":"func y1f(Float) -> Float","type":"func"},{"path":"\/documentation\/playdatekit\/yn(_:_:)","title":"func yn(Int32, Double) -> Double","type":"func"},{"path":"\/documentation\/playdatekit\/ynf(_:_:)","title":"func ynf(Int32, Float) -> Float","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/addscorecallback","title":"AddScoreCallback","type":"typealias"},{"path":"\/documentation\/playdatekit\/audiosourcefunction","title":"AudioSourceFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/boardslistcallback","title":"BoardsListCallback","type":"typealias"},{"path":"\/documentation\/playdatekit\/lcdcolor","title":"LCDColor","type":"typealias"},{"path":"\/documentation\/playdatekit\/lcdpattern","title":"LCDPattern","type":"typealias"},{"path":"\/documentation\/playdatekit\/lcdspritecollisionfilterproc","title":"LCDSpriteCollisionFilterProc","type":"typealias"},{"path":"\/documentation\/playdatekit\/lcdspritedrawfunction","title":"LCDSpriteDrawFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/lcdspriteupdatefunction","title":"LCDSpriteUpdateFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/midinote","title":"MIDINote","type":"typealias"},{"path":"\/documentation\/playdatekit\/pdbuttoncallbackfunction","title":"PDButtonCallbackFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/pdcallbackfunction","title":"PDCallbackFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/pdmenuitemcallbackfunction","title":"PDMenuItemCallbackFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/personalbestcallback","title":"PersonalBestCallback","type":"typealias"},{"path":"\/documentation\/playdatekit\/recordcallback","title":"RecordCallback","type":"typealias"},{"path":"\/documentation\/playdatekit\/scorescallback","title":"ScoresCallback","type":"typealias"},{"path":"\/documentation\/playdatekit\/sequencefinishedcallback","title":"SequenceFinishedCallback","type":"typealias"},{"path":"\/documentation\/playdatekit\/double_t","title":"double_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/effectproc","title":"effectProc","type":"typealias"},{"path":"\/documentation\/playdatekit\/float_t","title":"float_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_fast16_t","title":"int_fast16_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_fast32_t","title":"int_fast32_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_fast64_t","title":"int_fast64_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_fast8_t","title":"int_fast8_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_least16_t","title":"int_least16_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_least32_t","title":"int_least32_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_least64_t","title":"int_least64_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/int_least8_t","title":"int_least8_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/intmax_t","title":"intmax_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/intptr_t","title":"intptr_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/json_readfunc","title":"json_readFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/json_writefunc","title":"json_writeFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/locale_t","title":"locale_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/lua_cfunction","title":"lua_CFunction","type":"typealias"},{"path":"\/documentation\/playdatekit\/lua_state","title":"lua_State","type":"typealias"},{"path":"\/documentation\/playdatekit\/ptrdiff_t","title":"ptrdiff_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/signaldeallocfunc","title":"signalDeallocFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/signalnoteofffunc","title":"signalNoteOffFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/signalnoteonfunc","title":"signalNoteOnFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/signalstepfunc","title":"signalStepFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/size_t","title":"size_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/sndcallbackproc","title":"sndCallbackProc","type":"typealias"},{"path":"\/documentation\/playdatekit\/synthcopyuserdata","title":"synthCopyUserdata","type":"typealias"},{"path":"\/documentation\/playdatekit\/synthdeallocfunc","title":"synthDeallocFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/synthnoteonfunc","title":"synthNoteOnFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/synthreleasefunc","title":"synthReleaseFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/synthrenderfunc","title":"synthRenderFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/synthsetparameterfunc","title":"synthSetParameterFunc","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_fast16_t","title":"uint_fast16_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_fast32_t","title":"uint_fast32_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_fast64_t","title":"uint_fast64_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_fast8_t","title":"uint_fast8_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_least16_t","title":"uint_least16_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_least32_t","title":"uint_least32_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_least64_t","title":"uint_least64_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uint_least8_t","title":"uint_least8_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uintmax_t","title":"uintmax_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/uintptr_t","title":"uintptr_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/wchar_t","title":"wchar_t","type":"typealias"},{"path":"\/documentation\/playdatekit\/wint_t","title":"wint_t","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/fileoptions\/append","title":"case append","type":"case"},{"path":"\/documentation\/playdatekit\/fileoptions\/read","title":"case read","type":"case"},{"path":"\/documentation\/playdatekit\/fileoptions\/readdata","title":"case readData","type":"case"},{"path":"\/documentation\/playdatekit\/fileoptions\/write","title":"case write","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/fileoptions\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/fileoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/fileoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/fileoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/fileoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/fileoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/fileoptions","title":"FileOptions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodeblacktransparent","title":"case drawModeBlackTransparent","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodecopy","title":"case drawModeCopy","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodefillblack","title":"case drawModeFillBlack","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodefillwhite","title":"case drawModeFillWhite","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodeinverted","title":"case drawModeInverted","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodenxor","title":"case drawModeNXOR","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodewhitetransparent","title":"case drawModeWhiteTransparent","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/drawmodexor","title":"case drawModeXOR","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lcdbitmapdrawmode","title":"LCDBitmapDrawMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/bitmapflippedx","title":"case bitmapFlippedX","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/bitmapflippedxy","title":"case bitmapFlippedXY","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/bitmapflippedy","title":"case bitmapFlippedY","type":"case"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/bitmapunflipped","title":"case bitmapUnflipped","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lcdbitmapflip\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdbitmapflip\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lcdbitmapflip\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lcdbitmapflip","title":"LCDBitmapFlip","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/english","title":"case english","type":"case"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/japanese","title":"case japanese","type":"case"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lcdfontlanguage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdfontlanguage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lcdfontlanguage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lcdfontlanguage","title":"LCDFontLanguage","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/linecapstylebutt","title":"case lineCapStyleButt","type":"case"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/linecapstyleround","title":"case lineCapStyleRound","type":"case"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/linecapstylesquare","title":"case lineCapStyleSquare","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lcdlinecapstyle\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lcdlinecapstyle","title":"LCDLineCapStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/evenodd","title":"case evenOdd","type":"case"},{"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/nonzero","title":"case nonZero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lcdpolygonfillrule\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lcdpolygonfillrule","title":"LCDPolygonFillRule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/black","title":"case black","type":"case"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/white","title":"case white","type":"case"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/xor","title":"case xor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lcdsolidcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lcdsolidcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lcdsolidcolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lcdsolidcolor","title":"LCDSolidColor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lfotype\/arpeggiator","title":"case arpeggiator","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/function","title":"case function","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/sampleandhold","title":"case sampleAndHold","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/sawtoothdown","title":"case sawtoothDown","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/sawtoothup","title":"case sawtoothUp","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/sine","title":"case sine","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/square","title":"case square","type":"case"},{"path":"\/documentation\/playdatekit\/lfotype\/triangle","title":"case triangle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lfotype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lfotype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/lfotype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lfotype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/lfotype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/lfotype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/lfotype","title":"LFOType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/luatype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/float","title":"case float","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/function","title":"case function","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/int","title":"case int","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/nil","title":"case `nil`","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/object","title":"case object","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/string","title":"case string","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/table","title":"case table","type":"case"},{"path":"\/documentation\/playdatekit\/luatype\/thread","title":"case thread","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/luatype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/luatype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/luatype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/luatype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/luatype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/luatype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/luatype","title":"LuaType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/micsource\/autodetect","title":"case autodetect","type":"case"},{"path":"\/documentation\/playdatekit\/micsource\/headset","title":"case headset","type":"case"},{"path":"\/documentation\/playdatekit\/micsource\/internal","title":"case `internal`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/micsource\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/micsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/micsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/micsource\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/micsource\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/micsource\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/micsource","title":"MicSource","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdlanguage\/english","title":"case english","type":"case"},{"path":"\/documentation\/playdatekit\/pdlanguage\/japanese","title":"case japanese","type":"case"},{"path":"\/documentation\/playdatekit\/pdlanguage\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdlanguage\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdlanguage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/pdlanguage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdlanguage\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdlanguage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/pdlanguage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/pdlanguage","title":"PDLanguage","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/k16bitleencoding","title":"case k16BitLEEncoding","type":"case"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/kasciiencoding","title":"case kASCIIEncoding","type":"case"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/kutf8encoding","title":"case kUTF8Encoding","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/pdstringencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdstringencoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/pdstringencoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/pdstringencoding","title":"PDStringEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/initialize","title":"case initialize","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/initializelua","title":"case initializeLua","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/keypressed","title":"case keyPressed","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/keyreleased","title":"case keyReleased","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/lock","title":"case lock","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/lowpower","title":"case lowPower","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/pause","title":"case pause","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/resume","title":"case resume","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/terminate","title":"case terminate","type":"case"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/unlock","title":"case unlock","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/pdsystemevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/pdsystemevent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/pdsystemevent\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/pdsystemevent","title":"PDSystemEvent","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/error","title":"Playdate.Error","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/playdateapi","title":"static var playdateAPI: PlaydateAPI!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/playdate\/initialize(with:)","title":"static func initialize(with: UnsafeMutableRawPointer)","type":"method"}],"path":"\/documentation\/playdatekit\/playdate","title":"Playdate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundformat\/adpcmmono","title":"case adpcmMono","type":"case"},{"path":"\/documentation\/playdatekit\/soundformat\/adpcmstereo","title":"case adpcmStereo","type":"case"},{"path":"\/documentation\/playdatekit\/soundformat\/eightbitmono","title":"case eightBitMono","type":"case"},{"path":"\/documentation\/playdatekit\/soundformat\/eightbitstereo","title":"case eightBitStereo","type":"case"},{"path":"\/documentation\/playdatekit\/soundformat\/sixteenbitmono","title":"case sixteenBitMono","type":"case"},{"path":"\/documentation\/playdatekit\/soundformat\/sixteenbitstereo","title":"case sixteenBitStereo","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundformat\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/soundformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/soundformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/soundformat","title":"SoundFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundwaveform\/noise","title":"case noise","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/podigital","title":"case poDigital","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/pophase","title":"case poPhase","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/povosim","title":"case povOsim","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/sawtooth","title":"case sawtooth","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/sine","title":"case sine","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/square","title":"case square","type":"case"},{"path":"\/documentation\/playdatekit\/soundwaveform\/triangle","title":"case triangle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundwaveform\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundwaveform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/soundwaveform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundwaveform\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/soundwaveform\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/soundwaveform\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/soundwaveform","title":"SoundWaveform","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/collisiontypebounce","title":"case collisionTypeBounce","type":"case"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/collisiontypefreeze","title":"case collisionTypeFreeze","type":"case"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/collisiontypeoverlap","title":"case collisionTypeOverlap","type":"case"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/collisiontypeslide","title":"case collisionTypeSlide","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/spritecollisionresponsetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/spritecollisionresponsetype","title":"SpriteCollisionResponseType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/bandpass","title":"case bandPass","type":"case"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/highpass","title":"case highPass","type":"case"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/highshelf","title":"case highShelf","type":"case"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/lowpass","title":"case lowPass","type":"case"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/lowshelf","title":"case lowShelf","type":"case"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/notch","title":"case notch","type":"case"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/peq","title":"case peq","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/twopolefiltertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/twopolefiltertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/twopolefiltertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/twopolefiltertype","title":"TwoPoleFilterType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value_type\/array","title":"case array","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/false","title":"case `false`","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/float","title":"case float","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/integer","title":"case integer","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/null","title":"case null","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/string","title":"case string","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/table","title":"case table","type":"case"},{"path":"\/documentation\/playdatekit\/json_value_type\/true","title":"case `true`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value_type\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value_type\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playdatekit\/json_value_type\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value_type\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playdatekit\/json_value_type\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playdatekit\/json_value_type\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playdatekit\/json_value_type","title":"json_value_type","type":"enum"}],"icon":"Logo.png","path":"\/documentation\/playdatekit","title":"PlaydateKit","type":"module"}]},"references":{"Logo.png":{"alt":null,"identifier":"Logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Logo.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":2}}